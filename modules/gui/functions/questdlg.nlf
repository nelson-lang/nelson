//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// This file is part of the Nelson.
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// Alternatively, you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program. If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
function buttonname = questdlg(varargin)
  // buttonname = questdlg(question)
  // buttonname = questdlg(question, title)
  // buttonname = questdlg(question, title, default)
  // buttonname = questdlg(question, title, text1, default)
  // buttonname = questdlg(question, title, text1, text2, default)
  // buttonname = questdlg(question, title, text1, text2, text3, default)

  title = '';
  question = '';
  text1 = _('Yes');
  text2 = _('No');
  text3 = _('Cancel');
  res = '';
  default = text1;
  
  
  switch nargin()
    case 1
      // buttonname = questdlg(question)
      question = varargin{1};
      nb_buttons = 3;

    case 2
      // buttonname = questdlg(question, title)
      question = varargin{1};
      title = varargin{2};
      nb_buttons = 3;

    case 3
      // buttonname = questdlg(question, title, default)
      question = varargin{1};
      title = varargin{2};
      param3 = varargin{3};
      if strcmp(param3, text1) || strcmp(param3, text2) || strcmp(param3, text3)
        default = param3;
      else
        warning(_('default value is not an existing button name.')); 
      end
      nb_buttons = 3;

    case 4
      // buttonname = questdlg(question, title, text1, default)
      question = varargin{1};
      title = varargin{2};
      text1 = varargin{3};
      param4 = varargin{4};
      if strcmp(param4, text1)
        default = param4;
      else
        warning(_('default value is not an existing button name.')); 
      end
      nb_buttons = 1;
      
    case 5
     // buttonname = questdlg(question, title, text1, text2, default)
      question = varargin{1};
      title = varargin{2};
      text1 = varargin{3};
      text2 = varargin{4};
      param5 = varargin{5};
      if strcmp(param5, text1) || strcmp(param5, text2)
        default = param5;
      else
        warning(_('default value is not an existing button name.')); 
      end
      nb_buttons = 2;

    case 6
      // buttonname = questdlg(question, title, text1, text2, text3, default)
      question = varargin{1};
      title = varargin{2};
      text1 = varargin{3};
      text2 = varargin{4};
      text3 = varargin{5};
      default = varargin{6};
      nb_buttons = 3;

    otherwise
      error(_('Wrong number of input arguments.'));
  end
  
  
  box_file = [modulepath('gui'), '/qml/questionbox.qml'];
  box = qml_loadfile(box_file);
  box.title = title;

  textObj = QObject_findchildren(box, 'textArea', true);
  textObj.text = cellstr_to_txt(question);
  textObj.readOnly = true;
  
  button1Obj = QObject_findchildren(box, 'buttonLeft', true);
  button1Obj.text = text1;

  button2Obj = QObject_findchildren(box, 'buttonMiddle', true);
  button2Obj.text = text2;

  button3Obj = QObject_findchildren(box, 'buttonRight', true);
  button3Obj.text = text3;

  if strcmp(default, text1) == true
    button1Obj.focus = true;
    button1Obj.isDefault = true;
    button2Obj.focus = false;
    button3Obj.focus = false;
  else
    if strcmp(default, text2) == true
      button1Obj.focus = false;
      button2Obj.focus = true;
      button2Obj.isDefault = true;
      button3Obj.focus = false;
    else
      if strcmp(default, text3) == true
        button1Obj.focus = false;
        button2Obj.focus = false;
        button3Obj.focus = true;
        button3Obj.isDefault = true;
      else
        switch (nb_buttons)
        case 1
          button1Obj.focus = false;
          button2Obj.focus = true;
          button2Obj.isDefault = true;
          button3Obj.focus = false;
      
        case 2
          button1Obj.focus = true;
          button1Obj.isDefault = true;
          button2Obj.focus = false;
          button3Obj.focus = false;

        case 3
          button1Obj.focus = true;
          button1Obj.isDefault = true;
          button2Obj.focus = false;
          button3Obj.focus = false;

        otherwise
        end
      end
    end
  end

  switch (nb_buttons)
    case 1
      button1Obj.visible = true;
      button2Obj.visible = false;
      button3Obj.visible = false;
      len = button1Obj.width;
      
    case 2
      button1Obj.visible = true;
      button2Obj.visible = true;
      button3Obj.visible = false;
      len = button1Obj.width + button2Obj.width;

    case 3
      button1Obj.visible = true;
      button2Obj.visible = true;
      button3Obj.visible = true;
      len = button1Obj.width + button2Obj.width + button3Obj.width;

    otherwise
    
  end
  
  if len < 405
    len = 405;
  end
  box.width = len;
  box.minimumWidth = len;
  box.maximumWidth = len;

  box.visible = true;
  msgwait(box);

  if strcmp(box.wasClicked, 'buttonLeft') == true
    res = text1;
  end
  if strcmp(box.wasClicked, 'buttonMiddle') == true
    res = text2;
  end
  if strcmp(box.wasClicked, 'buttonRight') == true
    res = text3;
  end
  
  delete(box);
  buttonname = res;
endfunction
//=============================================================================
function msgwait(h)
  while(true)
    if (h.visible == false) 
      break;
    end
    sleep(0.1);
  end
endfunction
//=============================================================================
function txt = cellstr_to_txt(cstr)
  array_text = char(cstr);
  txt = '';
  for k = 1:size(array_text, 1)
    if k == 1
      txt = [array_text(k, :)];
    else
      txt = [txt, char(10), array_text(k, :)];
    end
  end
endfunction
//=============================================================================
