<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>rng</keyword>
    <short_description>Générateur de nombres aléatoires.</short_description>
    <syntax>
        <syntax_item>lst = rng('enginelist')</syntax_item>
        <syntax_item>rng('default')</syntax_item>
        <syntax_item>s = rng('default')</syntax_item>
        <syntax_item>rng('shuffle')</syntax_item>
        <syntax_item>s = rng('shuffle')</syntax_item>
        <syntax_item>rng(seed)</syntax_item>
        <syntax_item>s = rng(seed)</syntax_item>
        <syntax_item>rng(seed, generator)</syntax_item>
        <syntax_item>s = rng(seed, generator)</syntax_item>
        <syntax_item>rng('shuffle', generator)</syntax_item>
        <syntax_item>rng(s)</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
            <param_name>seed</param_name>
            <param_description
      >une valeur entière : nouvelle graine pour le générateur aléatoire</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>generator</param_name>
            <param_description
      >une chaîne : 'twister', 'twister64', 'simdTwister', 'combRecursive',
                'philox', 'laggedfibonacci607'</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>s</param_name>
            <param_description
      >une structure : état du générateur de nombres aléatoires</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
            <param_name>lst</param_name>
            <param_description>a cell of chaînes.</param_description>
        </param_output_item>
        <param_output_item>
            <param_name>s</param_name>
            <param_description
      >une structure : état du générateur de nombres aléatoires</param_description>
        </param_output_item>
    </param_output>
    <description>
        <p>
            <b
      >lst = rng('enginelist')</b> renvoie la liste des générateurs de nombres aléatoires disponibles.
        </p>
        <p>
            <b
      >rng('default')</b> remet les paramètres du générateur de nombres aléatoires aux valeurs par défaut.
        </p>
        <p>
            <b
      >s = rng('default')</b> remet les paramètres du générateur de nombres aléatoires aux valeurs par défaut et renvoie le générateur précédent sous forme de structure.
        </p>
        <p>
            <b
      >rng('shuffle')</b> remet les paramètres du générateur de nombres aléatoires aux valeurs par défaut.
        </p>
        <p>
            <b
      >s = rng('shuffle')</b> initialise la graine du générateur de nombres aléatoires en fonction de l'heure courante et renvoie le générateur précédent sous forme de structure.
        </p>
        <p>
            <b
      >rng(seed)</b> initialise la graine du générateur de nombres aléatoires en utilisant l'entier non négatif.
        </p>
        <p>
            <b
      >s = rng(seed)</b> initialise la graine du générateur de nombres aléatoires en utilisant l'entier non négatif et renvoie le générateur précédent sous forme de structure.
        </p>
        <p>
            <b
      >rng(seed, generator)</b> initialise la graine du générateur de nombres aléatoires en utilisant l'entier non négatif et spécifie également le type de générateur utilisé.
        </p>
        <p>
            <b
      >s = rng(seed, generator)</b> initialise la graine du générateur de nombres aléatoires en utilisant l'entier non négatif, spécifie le type de générateur utilisé et renvoie le générateur précédent sous forme de structure.
        </p>
        <p>
            <b
      >rng('shuffle', generator)</b> initialise la graine du générateur de nombres aléatoires en fonction de l'heure courante et spécifie également le type de générateur utilisé.
        </p>
        <p>
            <b
      >s = rng('shuffle', generator)</b> initialise la graine du générateur de nombres aléatoires en fonction de l'heure courante, spécifie également le type de générateur utilisé et renvoie le générateur précédent sous forme de structure.
        </p>
        <p>
            <b
      >s = rng</b> renvoie le générateur courant sous forme de structure.
        </p>
        <p>
            <b
      >rng(s)</b> restaure les paramètres du générateur de nombres aléatoires à partir d'une structure précédente renvoyée par <b
      >s = rng</b>.
        </p>
        <p />
        <p>Générateurs disponibles :</p>
        <table>
            <tr>
                <th>Valeur</th>
                <th>Nom du générateur</th>
                <th>Mot-clé du générateur</th>
            </tr>
            <tr>
                <td>"twister"</td>
                <td>Mersenne Twister</td>
                <td>mt19937ar</td>
            </tr>
            <tr>
                <td>"simdTwister"</td>
                <td>SIMD-Oriented Fast Mersenne Twister</td>
                <td>dsfmt19937</td>
            </tr>
            <tr>
                <td>"combRecursive"</td>
                <td>Combined Multiple Recursive</td>
                <td>mrg32k3a</td>
            </tr>
            <tr>
                <td>"multFibonacci"</td>
                <td>Multiplicative Lagged Fibonacci</td>
                <td>mlfg6331_64</td>
            </tr>
            <tr>
                <td>"philox"</td>
                <td>Philox 4x32 generator with 10 rounds</td>
                <td>philox4x32_10</td>
            </tr>
        </table>
        <p>Le générateur par défaut est "twister".</p>
    </description>
    <used_function />
    <bibliography />
    <examples>
        <example_item>
            <example_item_type>nelson</example_item_type>
            <example_item_description />
            <example_item_data
        runnable="cli"
      ><![CDATA[rng('default');
r = rng()
lst = rng('enginelist')]]></example_item_data>
        </example_item>
    </examples>
    <see_also>
        <see_also_item>
            <link linkend="${random}rand">rand</link>
        </see_also_item>
        <see_also_item>
            <link linkend="${random}randn">randn</link>
        </see_also_item>
        <see_also_item>
            <link linkend="${random}randi">randi</link>
        </see_also_item>
    </see_also>
    <history>
        <history_item>
            <history_version>1.0.0</history_version>
            <history_description>version initiale</history_description>
        </history_item>
        <history_item>
            <history_version>1.15.0</history_version>
            <history_description
      >Nouveau générateur de nombres aléatoires : simdTwister,
                combRecursive, philox</history_description>
        </history_item>
    </history>
    <authors>
        <author_item>Allan CORNET</author_item>
    </authors>
</xmldoc>
