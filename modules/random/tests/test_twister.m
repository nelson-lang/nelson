%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
rng('twister')
%=============================================================================
R = rand(3,4);
REF = [   0.8147    0.9134    0.2785    0.9649;
    0.9058    0.6324    0.5469    0.1576;
    0.1270    0.0975    0.9575    0.9706]; 
assert_isapprox(R, REF, 1e-4);
%=============================================================================
R = rand(3,4);
REF = [    0.9572    0.1419    0.7922    0.0357;
    0.4854    0.4218    0.9595    0.8491;
    0.8003    0.9157    0.6557    0.9340];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
R = randi(3, 4);
REF = [     3     2     1     3;
     3     1     1     1;
     3     3     1     3;
     2     1     3     1];
assert_isequal(R, REF);
%=============================================================================
R = randn(3, 4);
REF = [   -2.0423    0.6422    2.0225    0.8196;
   -1.0562   -0.0447   -0.7522    0.9321;
    0.7140   -1.3667    0.9970   -1.1617];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
R = randn(3, 4, 'like', 3i);
REF = [  -0.9912 + 0.4556i  -1.4147 + 0.4367i  -1.1152 + 0.1457i  -0.5782 + 0.7086i;
  -0.0045 - 1.0427i  -0.8308 + 0.8524i  -0.4540 - 0.6565i  -0.2033 + 0.5817i;
  -0.1079 + 0.3107i   1.9180 + 0.0574i  -0.4882 + 0.6770i  -0.6243 - 0.7610i];
assert_isapprox(R, REF, 1e-4);  
%=============================================================================
R = randn(3, 4, 'like', single(3i));
REF = single([
  -0.5374 + 2.3346i  -0.2313 + 0.4505i   1.5097 + 0.1666i   0.2933 - 1.9403i;
   1.0346 - 0.4639i   0.8006 + 0.8116i  -1.1182 + 2.5142i   0.3491 - 1.1445i;
   1.2834 + 2.2007i   1.1214 - 1.9768i   0.4352 - 0.4996i   0.8231 - 1.2662i]);
assert_isapprox(R, REF, 1e-4);
%=============================================================================
