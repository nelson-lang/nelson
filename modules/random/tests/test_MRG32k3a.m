%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
rng(0,'combRecursive');
r = rng();
assert_isequal(r.Type,'combRecursive');
assert_isequal(r.Seed, uint32(0));
ref_state = uint32([2637242579;
   1747669293;
   2112977067;
   2633436652;
   3518603782;
    229738972;
   2637242579;
   1747669293;
   2112977067;
   2633436652;
   3518603782;
    229738972]);
assert_isequal(r.State, ref_state);
%=============================================================================
R = rand(4, 4);
REF = [  0.727011758018417   0.027684801922269   0.318358744693222   0.726002771745855;
   0.452184066344457   0.131580204223432   0.322981379106844   0.739222484032351;
   0.938714294557252   0.211220857804805   0.416659916207741   0.869799715953008;
   0.236039851373673   0.932393973017922   0.649431596272524   0.681120644246932];
assert_isapprox(R, REF, 1e-7);
%=============================================================================
R = randi(4, 5);
REF = [    3     4     4     3     4;
     4     3     4     2     2;
     4     3     3     3     1;
     1     2     4     2     1;
     2     3     1     3     4];
assert_isequal(R, REF);
%=============================================================================
R = randn(4, 5);
REF = [    1.1320    0.3024    1.2189   -1.6772   -0.8255;
   -1.0169   -0.1755    1.3547    1.4081   -0.1081;
   -0.8988   -0.3636   -1.9869   -0.5208    0.8545;
    0.3766    1.5339   -0.0050   -1.1944    0.1242];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
R = rand(3, 4, 'like', 3i);
REF = [   0.0861 + 0.7108i   0.0915 + 0.4767i   0.9665 + 0.5592i   0.4493 + 0.4006i;
   0.5175 + 0.0340i   0.5097 + 0.4492i   0.1946 + 0.8643i   0.6129 + 0.7012i;
   0.1467 + 0.3601i   0.6340 + 0.3799i   0.9298 + 0.3869i   0.5494 + 0.1569i];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
