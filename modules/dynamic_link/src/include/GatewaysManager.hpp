//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// This file is part of the Nelson.
//=============================================================================
// LICENCE_BLOCK_BEGIN
// SPDX-License-Identifier: LGPL-3.0-or-later
// LICENCE_BLOCK_END
//=============================================================================
#pragma once
//=============================================================================
#include <string>
#include "nlsDynamic_link_exports.h"
#include "Evaluator.hpp"
//=============================================================================
namespace Nelson {
class NLSDYNAMIC_LINK_IMPEXP GatewaysManager
{
    //=============================================================================
public:
    //=============================================================================
    static GatewaysManager*
    getInstance();
    //=============================================================================
    void
    destroy(Evaluator* eval);
    //=============================================================================
    bool
    addGateway(Evaluator* eval, const std::wstring& libraryFullName, std::wstring& errorMessage);
    //=============================================================================
    bool
    removeGateway(Evaluator* eval, const std::wstring& libraryFullName, std::wstring& errorMessage);
    //=============================================================================
    wstringVector
    getLibraryNames();
    //=============================================================================
private:
    GatewaysManager();
    //=============================================================================
    static GatewaysManager* m_pInstance;
    //=============================================================================
};
//=============================================================================
}
//=============================================================================
