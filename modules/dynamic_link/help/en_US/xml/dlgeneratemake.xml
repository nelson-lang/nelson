<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
	<copyright>SAME AS NELSON SOFTWARE</copyright>

	<language>en_US</language>
	<keyword>dlgeneratemake</keyword>
	<short_description
  >Generates a makefile for building a dynamic library.</short_description>

	<syntax>
	    <syntax_item
    >[res, message] = dlgeneratemake(destinationdir, libname, c_cpp_files, include)</syntax_item>
		<syntax_item
    >[res, message] = dlgeneratemake(destinationdir, libname, c_cpp_files, includes, defines, external_libraries, build_configuration, c_flags, cxx_flags)</syntax_item>
	    <syntax_item
    >[res, message] = dlgeneratemake(maketype, destinationdir, libname, c_cpp_files, include)</syntax_item>
		<syntax_item
    >[res, message] = dlgeneratemake(maketype, destinationdir, libname, c_cpp_files, includes, defines, external_libraries, build_configuration, c_flags, cxx_flags)</syntax_item>

	</syntax>
	
	<param_input>
		<param_input_item>
			<param_name>maketype</param_name>
			<param_description
      >a string: 'executable' or 'dynamic_library'.</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>destinationdir</param_name>
			<param_description
      >a string: destination directory where is generated the makefile.</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>libname</param_name>
			<param_description
      >a string: destination dynamic library or executable name.</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>c_cpp_files</param_name>
			<param_description
      >a string or a cell of strings: .c or .cpp list files (full filename)</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>include</param_name>
			<param_description
      >a string or a cell of strings: directories where to find include files.</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>defines</param_name>
			<param_description
      >a string or a cell of strings: a list of defines</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>external_libraries</param_name>
			<param_description
      >a string or a cell of strings: a list of external libraries to link</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>build_configuration</param_name>
			<param_description>a string: 'Debug' or 'Release'</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>c_flags</param_name>
			<param_description>a string: C flags</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>cxx_flags</param_name>
			<param_description>a string: C flags</param_description>
		</param_input_item>
	</param_input>


	<param_output>
		<param_output_item>
			<param_name>res</param_name>
			<param_description
      >a logical: true if makefile was generated.</param_description>
		</param_output_item>
		<param_output_item>
			<param_name>message</param_name>
			<param_description
      >a string: empty if makefile was generated or an error message.</param_description>
		</param_output_item>

	</param_output>

	<description>
	 	<p><b
      >dlgeneratemake</b> generates a makefile adapted to your system environment for building shared libraries.</p>
		 <p>Thanks to <b>CMake</b> to help Nelson in this task.</p>
	</description>

	<used_function />
	<bibliography />

<examples>
	<example_item>
		<example_item_type>nelson</example_item_type>
		<example_item_description
      >See module skeleton for example</example_item_description>
		<example_item_data
      ><![CDATA[[status, message] = dlgeneratemake(currentpath, ...
'module_skeleton', ...
{[currentpath, '/cpp/cpp_sumBuiltin.cpp'], [currentpath, '/cpp/Gateway.cpp']}, ...
[{[currentpath, '/include']; [currentpath, '/../src/include']}; dlgetnelsonincludes()], ...
[], ...
[dlgetnelsonlibraries(); [currentpath, '/../src/business_code']]);]]>
	</example_item_data>
	</example_item>
</examples>

	<see_also>
		<see_also_item>
			<link linkend="${dynamic_link}dlmake">dlmake</link>
		</see_also_item>
	</see_also>

	<history>
		<history_item>
			<history_version>1.0.0</history_version>
			<history_description>initial version</history_description>
		</history_item>
	</history>

	<authors>
		<author_item>Allan CORNET</author_item>
	</authors>
</xmldoc>
