<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
	<copyright>SAME AS NELSON SOFTWARE</copyright>

	<language>en_US</language>
	<keyword>dlgenerateloader</keyword>
	<short_description>Generates loader.m file for C++ gateway.</short_description>

	<syntax>
		<syntax_item>dlgenerateloader(destinationdir, libraryname)</syntax_item>

	</syntax>
	
	<param_input>
		<param_input_item>
			<param_name>destinationdir</param_name>
			<param_description
      >a string: destination directory where is generated the loader.m file.</param_description>
        </param_input_item>            
		<param_input_item>
			<param_name>libraryname</param_name>
			<param_description
      >a string or a cell of string: external dynamic library names.</param_description>
		</param_input_item>

	</param_input>

	<description>
		<p><b
      >dlgenerateloader</b> generates a 'loader.m' load external dynamic libraries.</p>
	</description>


	<used_function />
	<bibliography />

<examples>

	<example_item>
		<example_item_type>nelson</example_item_type>
		<example_item_description
      >See module skeleton for example</example_item_description>
		<example_item_data
      ><![CDATA[
dlgenerateloader(tempdir(), {'c_dynamic_library_1',  'c_dynamic_library_2'});
text = fileread([tempdir(), 'loader.m'])]]>
	</example_item_data>
	
	</example_item>


</examples>

	<see_also>
		<see_also_item>
			<link linkend="${dynamic_link}dlgenerateunloader">dlgenerateunloader</link>
		</see_also_item>
		<see_also_item>
			<link linkend="${dynamic_link}dlgenerategateway">dlgenerategateway</link>
		</see_also_item>
	</see_also>

	<history>
		<history_item>
			<history_version>1.0.0</history_version>
			<history_description>initial version</history_description>
		</history_item>
	</history>

	<authors>
		<author_item>Allan CORNET</author_item>
	</authors>
</xmldoc>
