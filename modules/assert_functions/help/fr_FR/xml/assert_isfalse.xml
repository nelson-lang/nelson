<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>assert_isfalse</keyword>
    <short_description>Vérifie que la condition est fausse.</short_description>
    <syntax>
        <syntax_item>assert_isfalse(x)</syntax_item>
        <syntax_item>r = assert_isfalse(x)</syntax_item>
        <syntax_item>[r, msg] = assert_isfalse(x)</syntax_item>
        <syntax_item>assert_isfalse(x, err_msg)</syntax_item>
        <syntax_item>r = assert_isfalse(x, err_msg)</syntax_item>
        <syntax_item>[r, msg] = assert_isfalse(x, err_msg)</syntax_item>
    </syntax>
    <param_input>
                <param_input_item>
                        <param_name>x</param_name>
                        <param_description
      >une valeur logique à tester pour la fausseté.</param_description>
                </param_input_item>
                <param_input_item>
                        <param_name>err_msg</param_name>
                        <param_description
      >une chaîne contenant le message d'erreur personnalisé à afficher en cas d'échec de l'assertion (optionnel).</param_description>
                </param_input_item>
    </param_input>
    <param_output>
                <param_output_item>
                        <param_name>r</param_name>
                        <param_description
      >une valeur logique : true si l'assertion réussit, false sinon.</param_description>
                </param_output_item>
                <param_output_item>
                        <param_name>msg</param_name>
                        <param_description
      >une chaîne contenant le message d'erreur. Si x == false, alors msg == ''. Si x == true, alors msg contient le message d'échec de l'assertion.</param_description>
                </param_output_item>
    </param_output>
    <description>
        <p><b
      >assert_isfalse</b> lève une erreur si la valeur d'entrée est vraie.</p>
        <p
    >Cette fonction lève également une erreur si l'entrée n'est pas une valeur logique, garantissant la sécurité de type.</p>
        <p>Lorsque le paramètre optionnel <b
      >err_msg</b> est fourni, il sera utilisé comme message d'erreur à la place du message par défaut en cas d'échec de l'assertion.</p>
        <p
    >Cette fonction est utile dans les tests unitaires pour vérifier que des conditions sont fausses ou que des opérations logiques retournent le résultat faux attendu.</p>
    </description>
    <used_function />
    <bibliography />
    <examples>
        <example_item>
            <example_item_type>nelson</example_item_type>
        <example_item_description
      >Test qui démontre l'échec de l'assertion (3 n'est pas égal à 4) :</example_item_description>
            <example_item_data
        runnable="cli"
      ><![CDATA[assert_isfalse(3 ~= 4)]]></example_item_data>
        </example_item>
        <example_item>
            <example_item_type>nelson</example_item_type>
        <example_item_description
      >Test qui réussit (3 égal 4 est faux) :</example_item_description>
            <example_item_data
        runnable="cli"
      ><![CDATA[assert_isfalse(3 == 4)]]></example_item_data>
        </example_item>
        <example_item>
            <example_item_type>nelson</example_item_type>
        <example_item_description
      >Test avec une valeur fausse explicite :</example_item_description>
            <example_item_data
        runnable="cli"
      ><![CDATA[r = assert_isfalse(false)]]></example_item_data>
        </example_item>
        <example_item>
            <example_item_type>nelson</example_item_type>
        <example_item_description
      >Utilisation des valeurs de retour pour gérer les résultats d'assertion :</example_item_description>
            <example_item_data
        runnable="cli"
      ><![CDATA[[r, msg] = assert_isfalse(false)]]></example_item_data>
        </example_item>
        <example_item>
            <example_item_type>nelson</example_item_type>
        <example_item_description
      >Test avec un message d'erreur personnalisé :</example_item_description>
            <example_item_data
        runnable="cli"
      ><![CDATA[[r, msg] = assert_isfalse(3 == 3, 'your error message.');
if ~r
    disp(['Custom error: ' msg])
end]]></example_item_data>
        </example_item>
        <example_item>
            <example_item_type>nelson</example_item_type>
        <example_item_description
      >Exemple montrant la gestion d'erreur lors de l'échec de l'assertion :</example_item_description>
            <example_item_data
        runnable="cli"
      ><![CDATA[try
    assert_isfalse(true, 'This should be false!');
catch ME
    disp(['Error caught: ' ME.message])
end]]></example_item_data>
        </example_item>
    </examples>
    <see_also>
        <see_also_item>
            <link
        linkend="${assert_functions}assert_istrue"
      >assert_istrue</link>
        </see_also_item>
        <see_also_item>
            <link
        linkend="${assert_functions}assert_checkerror"
      >assert_checkerror</link>
        </see_also_item>
        <see_also_item>
            <link
        linkend="${assert_functions}assert_isequal"
      >assert_isequal</link>
        </see_also_item>
    </see_also>
    <history>
        <history_item>
            <history_version>1.0.0</history_version>
            <history_description>version initiale</history_description>
        </history_item>
    </history>
    <authors>
        <author_item>Allan CORNET</author_item>
    </authors>
</xmldoc>
