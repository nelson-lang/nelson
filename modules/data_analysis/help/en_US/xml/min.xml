<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
	<copyright>SAME AS NELSON SOFTWARE</copyright>

	<language>en_US</language>
	<keyword>min</keyword>
	<short_description>Minimum elements of an array.</short_description>

	<syntax>
		<syntax_item>M = min(A)</syntax_item>
		<syntax_item>[M, I] = min(A)</syntax_item>
		<syntax_item>M = min(A, [], dim)</syntax_item>
		<syntax_item>[M, I] = min(A, [], dim)</syntax_item>
		<syntax_item>M = min(A, [], dim, 'omitnan')</syntax_item>
		<syntax_item>[M, I] = min(A, [], dim, 'includenan')</syntax_item>
		<syntax_item>[M, I] = min(A, [], 'all')</syntax_item>
		<syntax_item>[M, I] = min(A, [], 'all', 'omitnan')</syntax_item>
		<syntax_item>[M, I] = min(A, [], 'all', 'includenan')</syntax_item>
		<syntax_item>C = min(A, B)</syntax_item>
		<syntax_item>C = min(A, B, 'omitnan')</syntax_item>
		<syntax_item>C = min(A, B, 'includenan')</syntax_item>
	</syntax>
	
	<param_input>
		<param_input_item>
			<param_name>A</param_name>
			<param_description>a variable</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>dim</param_name>
			<param_description
      >a positive integer scalar (Dimension to operate along)</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>'omitnan'</param_name>
			<param_description
      >ignore all NaN values. default behaviour. min will return the first element, if all elements are NaN.</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>'includenan'</param_name>
			<param_description>include the NaN values.</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>'all'</param_name>
			<param_description>it finds the minimum over all elements.</param_description>
		</param_input_item>

	</param_input>

	<param_output>
		<param_output_item>
			<param_name>M</param_name>
			<param_description>minimum values of A.</param_description>
		</param_output_item>
			<param_output_item>
			<param_name>I</param_name>
			<param_description>Index to minimum values of A.</param_description>
		</param_output_item>
		<param_output_item>
			<param_name>C</param_name>
			<param_description>minimum elements from A or B.</param_description>
		</param_output_item>
	
	</param_output>

	<description>
		<p><b>min</b> find minimum values in an array.</p>
		<p>If <b>A</b> is a matrix then <b
      >M = min(A)</b> is a row vector containing the minimum value of each column.</p>
		<p>If <b>A</b> is a vector then <b>M = min(A)</b> will return the minimum of <b
      >A</b>.</p>
		<p>If <b>A</b> If A is complex number then <b
      >M = min(A)</b> will return founded complex number with the largest magnitude.</p>
	</description>

	<used_function />
	<bibliography />
	
<examples>

	<example_item>
		<example_item_type>nelson</example_item_type>
		<example_item_description />
		<example_item_data
      ><![CDATA[A = [1 2 3; 4 5 6];
M = min(A)
M = min(A, [], 'all')]]>
		</example_item_data>
	</example_item>

</examples>

	<see_also>
		<see_also_item>
			<link linkend="${data_analysis}max">max</link>
		</see_also_item>
	</see_also>

	<history>
		<history_item>
			<history_version>1.0.0</history_version>
			<history_description>initial version</history_description>
		</history_item>
	</history>

	<authors>
		<author_item>Allan CORNET</author_item>
	</authors>
</xmldoc>
