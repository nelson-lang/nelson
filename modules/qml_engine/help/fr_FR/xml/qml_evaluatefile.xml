<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>qml_evaluatefile</keyword>
    <short_description>Évalue un fichier JS.</short_description>
    <syntax>
        <syntax_item>r = qml_evaluatefile(filename)</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
            <param_name>filename</param_name>
            <param_description
      >une chaîne : nom de fichier JS.</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
        <param_name>r</param_name>
        <param_description>a double, logical, int ou string.</param_description>
        </param_output_item>
    </param_output>
    <description>
        <p>Évalue un fichier JS.</p>
        <p
    >Si la valeur retournée ne peut pas être convertie en type de base, elle sera convertie en chaîne.</p>
    </description>
    <used_function />
    <bibliography />
    <examples>
        <example_item>
            <example_item_type>nelson</example_item_type>
            <example_item_description />
            <example_item_data
        runnable="adv-cli"
      ><![CDATA[test_file = [tempdir() , '/example_qml_evaluatefile.js'];
f = fopen(test_file, 'wt');
fwrite(f, 'a = 2 + 4');
fclose(f);
qml_evaluatefile(test_file)]]></example_item_data>
        </example_item>
    </examples>
    <see_also>
        <see_also_item>
            <link
        linkend="${qml_engine}qml_evaluatestring"
      >qml_evaluatestring</link>
        </see_also_item>
    </see_also>
    <history>
            <history_item>
                <history_version>1.0.0</history_version>
                <history_description>version initiale</history_description>
            </history_item>
    </history>
    <authors>
        <author_item>Allan CORNET</author_item>
    </authors>
</xmldoc>
