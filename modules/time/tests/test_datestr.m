%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
assert_isequal(nargin('datestr'), -2);
assert_isequal(nargout('datestr'), 1);
%=============================================================================
R = datestr([2024 10 1 3 4 2]);
REF = '01-Oct-2024 03:04:02';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2;2025 10 2 11 5 1]);
REF = [ '01-Oct-2024 03:04:02';'02-Oct-2025 11:05:01'];
assert_isequal(R, REF);
%=============================================================================
months = {'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'};
for k = 1:12
    R = datestr([2024 k 1 3 4 2], 'local');
    REF = sprintf('01-%s-2024 03:04:02', months{k});
    assert_isequal(R, REF);
end
%=============================================================================
R = datestr([2024 10 1 3 4 2], -1);
REF = '01-Oct-2024 03:04:02';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 0);
REF = '01-Oct-2024 03:04:02';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 1);
REF = '01-Oct-2024';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 2);
REF = '10/01/24';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 3);
REF = 'Oct';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 4);
REF = 'O';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 5);
REF = '10';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 6);
REF = '10/01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 7);
REF = '01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 8);
REF = 'Tue';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 9);
REF = 'T';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 10);
REF = '2024';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 11);
REF = '24';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 12);
REF = 'Oct24';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 13);
REF = '03:04:02';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 14);
REF = ' 3:04:02 AM';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 15);
REF = '03:04';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 16);
REF = ' 3:04 AM';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 17);
REF = 'Q4-24';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 18);
REF = 'Q4';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 19);
REF = '01/10';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 20);
REF = '01/10/24';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 21);
REF = 'Oct.01,2024 03:04:02';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 22);
REF = 'Oct.01,2024';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 23);
REF = '10/01/2024';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 24);
REF = '01/10/2024';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 25);
REF = '24/10/01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 26);
REF = '2024/10/01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 27);
REF = 'Q4-2024';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 28);
REF = 'Oct2024';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 29);
REF = '2024-10-01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 30);
REF = '20241001T030402';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 31);
REF = '2024-10-01 03:04:02';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2024 10 1 3 4 2], 'yyyy/mm/dd');
REF = '2024/10/01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'dd-mmm-yyyy HH:MM:SS');
REF = '01-Mar-2000 15:45:17';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'dd-mmm-yyyy');
REF = '01-Mar-2000';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'dd-mmm-yyyy HH:MM:SS');
REF = '01-Mar-2000 15:45:17';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'dd-mmm-yyyy');
REF = '01-Mar-2000';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'mm/dd/yy');
REF = '03/01/00';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'mmm');
REF = 'Mar';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'm');
REF = 'M';
assert_isequal(R, REF);;
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'mm');
REF = '03';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'mm/dd');
REF = '03/01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'dd');
REF = '01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'ddd');
REF = 'Wed';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'd');
REF = 'W';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'yyyy');
REF = '2000';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'yy');
REF = '00';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'mmmyy');
REF = 'Mar00';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'HH:MM:SS');
REF = '15:45:17';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'HH:MM:SS PM');
REF = ' 3:45:17 PM';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'HH:MM');
REF = '15:45';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'HH:MM PM');
REF = ' 3:45 PM';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2221, 3, 1, 15, 45, 17], 'QQ-YY');
REF = 'Q1-21';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'QQ');
REF = 'Q1';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'dd/mm');
REF = '01/03';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'dd/mm/yy');
REF = '01/03/00';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'mmm.dd,yyyy HH:MM:SS');
REF = 'Mar.01,2000 15:45:17';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'mmm.dd,yyyy');
REF = 'Mar.01,2000';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'mm/dd/yyyy');
REF = '03/01/2000';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'dd/mm/yyyy');
REF = '01/03/2000';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'yy/mm/dd');
REF = '00/03/01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'yyyy/mm/dd');
REF = '2000/03/01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2021, 3, 1, 15, 45, 17], 'QQ-YYYY');
REF = 'Q1-2021';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'mmmyyyy');
REF = 'Mar2000';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'yyyy-mm-dd');
REF = '2000-03-01';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'yyyymmddTHHMMSS');
REF = '20000301T154517';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'yyyy-mm-dd HH:MM:SS');
REF = '2000-03-01 15:45:17';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'HH:MM:SS PM');
REF = ' 3:45:17 PM';
assert_isequal(R, REF);
%=============================================================================
R = datestr([2000, 3, 1, 15, 45, 17], 'HH:MM:SS AM');
REF = ' 3:45:17 PM';
assert_isequal(R, REF);
%=============================================================================
cmd = "R = datestr([2000, 3, 1, 15, 45, 17], 'dd/mm/dd/yy');";
msg = [_('Invalid date format (duplicated field): '), 'dd'];
assert_checkerror(cmd, msg) 
%=============================================================================
