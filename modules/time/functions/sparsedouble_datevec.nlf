%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU Lesser General Public
% License as published by the Free Software Foundation; either
% version 2.1 of the License, or (at your option) any later version.
%
% Alternatively, you can redistribute it and/or
% modify it under the terms of the GNU General Public License as
% published by the Free Software Foundation; either version 2 of
% the License, or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU Lesser General Public License for more details.
%
% You should have received a copy of the GNU Lesser General Public
% License along with this program. If not, see <http://www.gnu.org/licenses/>.
% LICENCE_BLOCK_END
%=============================================================================
function varargout = sparsedouble_datevec(M)
  if nargin ~= 1
    error(_('Wrong number of input arguments.'));
  end
  [I, J, V] = IJV(M);
  if nargout == 1
    varargout{1} = datevec(V);
  else
    R = datevec(V);
    varargout{1} = reshape(R(:, 1), 1, []);
    varargout{2} = reshape(R(:, 2), 1, []);
    varargout{3} = reshape(R(:, 3), 1, []);
    varargout{4} = reshape(R(:, 4), 1, []);
    varargout{5} = reshape(R(:, 5), 1, []);
    varargout{6} = reshape(R(:, 6), 1, []);
 end
endfunction
%=============================================================================
