%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
A = [ 10 20 30; 40 50 60; 70 80 90];
R = circshift(A, 1);
REF = [ 70    80    90; 10    20    30; 40    50    60];
assert_isequal(R, REF);
%=============================================================================
A = [ 10 20 30; 40 50 60; 70 80 90];
R = circshift(A, -3);
assert_isequal(R, A);
%=============================================================================
A = [ 10 20 30; 40 50 60; 70 80 90];
R = circshift(A, -2);
REF = [    70    80    90; 10    20    30; 40    50    60];
assert_isequal(R, REF);
%=============================================================================
A = [ 10 20 30; 40 50 60; 70 80 90];
R = circshift (A, [0, 1]);
REF = [30    10    20; 60    40    50; 90    70    80];
assert_isequal(R, REF);
%=============================================================================
A = [ 10 20 30; 40 50 60; 70 80 90];
R = circshift (A, [1, 0]);
REF = [70    80    90; 10    20    30; 40    50    60];
assert_isequal(R, REF);
%=============================================================================
assert_checkerror('circshift([], NaN)', _('All values of N must be integer values.'));
%=============================================================================
