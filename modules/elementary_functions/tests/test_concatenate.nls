//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
A = logical([1 2 3; 4 5 6]);
B = logical([7; 8]);
R1 = horzcat(A, B);
R2 = [A, B];
assert_isequal(R1, R2);
//=============================================================================
A = logical([1 2 3; 4 5 6]);
B = logical([7 8 9]);
R1 = vertcat(A, B);
R2 = [A; B];
assert_isequal(R1, R2);
//=============================================================================
A = [1 2 3; 4 5 6];
B = [7; 8];
R1 = horzcat(A, B);
R2 = [A, B];
assert_isequal(R1, R2);
//=============================================================================
A = [1 2 3; 4 5 6];
B = [7 8 9];
R1 = vertcat(A, B);
R2 = [A; B];
assert_isequal(R1, R2);
//=============================================================================
A = [1 2 3i; 4 5 6];
B = [7 8 9i];
R1 = vertcat(A, B);
R2 = [A; B];
assert_isequal(R1, R2);
//=============================================================================
A = sparse([1 2 3; 4 5 6]);
B = sparse([7; 8]);
R1 = full(horzcat(A, B));
R2 = full([A, B]);
assert_isequal(R1, R2);
//=============================================================================
A = sparse([1 2 3i; 4 5 6]);
B = sparse([7; 8i]);
R1 = full(horzcat(A, B));
R2 = full([A, B]);
assert_isequal(R1, R2);
//=============================================================================
A = sparse([1 2 3; 4 5 6]);
B = sparse([7 8 9]);
R1 = full(vertcat(A, B));
R2 = full([A; B]);
assert_isequal(R1, R2);
//=============================================================================
A = sparse([1 2 3i; 4 5 6]);
B = sparse([7 8 9i]);
R1 = full(vertcat(A, B));
R2 = full([A; B]);
assert_isequal(R1, R2);
//=============================================================================
