%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
assert_isequal(nargin('hadamard'), -1);
assert_isequal(nargout('hadamard'), 1);
%=============================================================================
R = hadamard(1);
REF = 1;
assert_isequal(R, REF);
%=============================================================================
R = hadamard (2);
REF = [1, 1; 1, -1];
assert_isequal(R, REF);
%=============================================================================
R = hadamard(4);
REF = [1     1     1     1;
1    -1     1    -1;
1     1    -1    -1;
1    -1    -1     1];
assert_isequal(R, REF);
%=============================================================================
assert_checkerror('hadamard(3)', _('N must be 2^k*p, with p = 1, 12, 20.'));
%=============================================================================
R = hadamard(4, 'single');
REF = [1     1     1     1;
1    -1     1    -1;
1     1    -1    -1;
1    -1    -1     1];
REF = single(REF);
assert_isequal(R, REF);
%=============================================================================
