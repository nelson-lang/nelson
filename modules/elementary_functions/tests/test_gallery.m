%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
% Test gallery functions
%=============================================================================
R = gallery(3);
REF = [ -149,   -50,  -154;
       537,   180,   546;
       -27,    -9,   -25 ];
assert_isequal(R, REF);
%=============================================================================
R = gallery(5);
REF = [ -9, 11, -21, 63, -252;
      70, -69, 141, -421, 1684;
    -575, 575, -1149, 3451, -13801;
    3891, -3891, 7782, -23345, 93365;
    1024, -1024, 2048, -6144, 24572 ];
assert_isequal(R, REF);
%=============================================================================
assert_checkerror('R = gallery(4);', _('Wrong value for #1 argument.'));
%=============================================================================
R = gallery('circul', 11);
REF = [     1     2     3     4     5     6     7     8     9    10    11
    11     1     2     3     4     5     6     7     8     9    10
    10    11     1     2     3     4     5     6     7     8     9
     9    10    11     1     2     3     4     5     6     7     8
     8     9    10    11     1     2     3     4     5     6     7
     7     8     9    10    11     1     2     3     4     5     6
     6     7     8     9    10    11     1     2     3     4     5
     5     6     7     8     9    10    11     1     2     3     4
     4     5     6     7     8     9    10    11     1     2     3
     3     4     5     6     7     8     9    10    11     1     2
     2     3     4     5     6     7     8     9    10    11     1];
assert_isequal(R, REF);
%=============================================================================
R = gallery('grcar', 11);
REF = [     1     1     1     1     0     0     0     0     0     0     0
    -1     1     1     1     1     0     0     0     0     0     0
     0    -1     1     1     1     1     0     0     0     0     0
     0     0    -1     1     1     1     1     0     0     0     0
     0     0     0    -1     1     1     1     1     0     0     0
     0     0     0     0    -1     1     1     1     1     0     0
     0     0     0     0     0    -1     1     1     1     1     0
     0     0     0     0     0     0    -1     1     1     1     1
     0     0     0     0     0     0     0    -1     1     1     1
     0     0     0     0     0     0     0     0    -1     1     1
     0     0     0     0     0     0     0     0     0    -1     1];
assert_isequal(R, REF);
%=============================================================================
R = gallery('grcar', 5, 2);
REF = [     1     1     1     0     0;
    -1     1     1     1     0;
     0    -1     1     1     1;
     0     0    -1     1     1;
     0     0     0    -1     1];
assert_isequal(R, REF);
%=============================================================================
R = gallery('minij', 5);
REF = [    1     1     1     1     1;
     1     2     2     2     2;
     1     2     3     3     3;
     1     2     3     4     4;
     1     2     3     4     5];
assert_isequal(R, REF);
%=============================================================================
R = gallery('dramadah', 6);
REF = [     1     1     0     1     0     0;
     0     1     1     0     1     0;
     0     0     1     1     0     1;
     1     0     0     1     1     0;
     1     1     0     0     1     1;
     0     1     1     0     0     1];
assert_isequal(R, REF);
%=============================================================================
R = gallery('dramadah', 5, 2);
REF = [     1     1     0     1     0;
     0     1     1     0     1;
     0     0     1     1     0;
     0     0     0     1     1;
     0     0     0     0     1];
assert_isequal(R, REF);
%=============================================================================
R = gallery('house', [1:5]');
REF = [   8.4162;
    2.0000;
    3.0000;
    4.0000;
    5.0000 ];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
R = gallery ('binomial',3,2);
REF = [    1     2     1;
     1     0    -1;
     1    -2     1];
assert_isequal(R, REF);
%=============================================================================
R = gallery ('binomial',3);
REF = [    1     2     1;
     1     0    -1;
     1    -2     1];
assert_isequal(R, REF);
%=============================================================================
R = gallery('cauchy', 1:3, 2:4);
REF = [0.3333    0.2500    0.2000;
    0.2500    0.2000    0.1667;
    0.2000    0.1667    0.1429];
assert_isapprox(R, REF, 1e-3);
%=============================================================================
R = gallery('cauchy', 5);
REF = [    0.5000    0.3333    0.2500    0.2000    0.1667;
    0.3333    0.2500    0.2000    0.1667    0.1429;
    0.2500    0.2000    0.1667    0.1429    0.1250;
    0.2000    0.1667    0.1429    0.1250    0.1111;
    0.1667    0.1429    0.1250    0.1111    0.1000];
assert_isapprox(R, REF, 1e-3);
%=============================================================================
R = gallery('ris', 3);
REF = [0.2000    0.3333    1.0000;
    0.3333    1.0000   -1.0000;
    1.0000   -1.0000   -0.3333];
assert_isapprox(R, REF, 1e-3);
%=============================================================================
R = gallery('chebspec', 5, 0);
REF = [    5.5000   -6.8284    2.0000   -1.1716    1.0000;
    3.4142   -0.7071   -1.4142    0.7071   -0.5858;
   -1.0000    1.4142        -0   -1.4142    1.0000;
    0.5858   -0.7071    1.4142    0.7071   -3.4142;
   -1.0000    1.1716   -2.0000    6.8284   -5.5000];
assert_isapprox(R, REF, 1e-3);
%=============================================================================
R = gallery('chebspec', 5, 1);
REF = [   -1.1708   -2.0000    0.8944   -0.6180    0.5528;
    2.0000   -0.1708   -1.6180    0.8944   -0.7639;
   -0.8944    1.6180    0.1708   -2.0000    1.4472;
    0.6180   -0.8944    2.0000    1.1708   -5.2361;
   -1.1056    1.5279   -2.8944   10.4721   -8.5000];
assert_isapprox(R, REF, 1e-3);
%=============================================================================
R = gallery('chebspec', 5);
REF = [    5.5000   -6.8284    2.0000   -1.1716    1.0000;
    3.4142   -0.7071   -1.4142    0.7071   -0.5858;
   -1.0000    1.4142        -0   -1.4142    1.0000;
    0.5858   -0.7071    1.4142    0.7071   -3.4142;
   -1.0000    1.1716   -2.0000    6.8284   -5.5000];
assert_isapprox(R, REF, 1e-3);
%=============================================================================
R = gallery ('wilk', 5);
REF = [    0.9072    0.6048    0.4536    0.3629    0.3024;
    0.6048    0.4536    0.3629    0.3024    0.2592;
    0.4536    0.3629    0.3024    0.2592    0.2268;
    0.3629    0.3024    0.2592    0.2268    0.2016;
    0.3024    0.2592    0.2268    0.2016    0.1814];
assert_isapprox(R, REF, 1e-3);
%=============================================================================   
[R1, R2] = gallery ('wilk', 5);
REF = [    0.9072    0.6048    0.4536    0.3629    0.3024;
    0.6048    0.4536    0.3629    0.3024    0.2592;
    0.4536    0.3629    0.3024    0.2592    0.2268;
    0.3629    0.3024    0.2592    0.2268    0.2016;
    0.3024    0.2592    0.2268    0.2016    0.1814];
assert_isapprox(R1, REF, 1e-3);
assert_isequal(R2, []);
%=============================================================================
R = gallery ('wilk', 21);
REF = [    10     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
     1     9     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     1     8     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     1     7     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     1     6     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     1     5     1     0     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     1     4     1     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     1     3     1     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     1     2     1     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     1     1     1     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     1     0     1     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     1     1     1     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     1     2     1     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     1     3     1     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0     1     4     1     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     5     1     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     6     1     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     7     1     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     8     1     0
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1     9     1
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     1    10];
assert_isequal(R, REF);
%=============================================================================
R = gallery('sampling', 4);
REF = [
    4.8333   -1.0000   -0.5000   -0.3333
    2.0000    4.0000   -2.0000   -1.0000
    1.5000    3.0000    1.5000   -3.0000
    1.3333    2.0000    4.0000   -4.3333];
assert_isapprox(R, REF, 1e-3);
%=============================================================================
R = gallery('ipjfact', 4);
REF = [           2           6          24         120;
           6          24         120         720;
          24         120         720        5040;
         120         720        5040       40320];
assert_isequal(R, REF);
%=============================================================================
R = gallery('ipjfact', 4, 1);
REF = [   0.5000    0.1667    0.0417    0.0083;
    0.1667    0.0417    0.0083    0.0014;
    0.0417    0.0083    0.0014    0.0002;
    0.0083    0.0014    0.0002    0.0000];
assert_isapprox(R, REF, 1e-3);
%=============================================================================
R = gallery('moler', 4);
REF = [1    -1    -1    -1
    -1     2     0     0
    -1     0     3     1
    -1     0     1     4];
assert_isequal(R, REF);
%=============================================================================
R = gallery('lotkin', 4);
REF = [   1.0000    1.0000    1.0000    1.0000;
    0.5000    0.3333    0.2500    0.2000;
    0.3333    0.2500    0.2000    0.1667;
    0.2500    0.2000    0.1667    0.1429];
assert_isapprox(R, REF, 1e-3);
%=============================================================================
R = gallery('chebvand', 4);
REF = [    1.0000    1.0000    1.0000    1.0000
         0    0.3333    0.6667    1.0000
   -1.0000   -0.7778   -0.1111    1.0000
         0   -0.8519   -0.8148    1.0000];
assert_isapprox(R, REF, 1e-3);
%=============================================================================