%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
assert_isequal(nargin('vander'), 1)
assert_isequal(nargout('vander'), 1)
%=============================================================================
R = vander(ones(0, 1));
REF = [];
assert_isequal(R, REF);
%=============================================================================
R = vander(1);
REF = 1;
assert_isequal(R, REF);
%=============================================================================
R = vander(NaN);
REF = 1;
assert_isequal(R, REF);
%=============================================================================
R = vander(Inf);
REF = 1;
assert_isequal(R, REF);
%=============================================================================
R = vander(1:0.5:3);
REF = [  1.0000    1.0000    1.0000    1.0000    1.0000;
5.0625    3.3750    2.2500    1.5000    1.0000;
16.0000    8.0000    4.0000    2.0000    1.0000;
39.0625   15.6250    6.2500    2.5000    1.0000;
81.0000   27.0000    9.0000    3.0000    1.0000];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
R = vander([i, 2i, 3i]);
REF = [-1, i, 1; -4, 2i, 1; -9, 3i, 1];
assert_isequal(R, REF);
%=============================================================================
