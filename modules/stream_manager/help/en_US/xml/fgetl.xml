<?xml version="1.0" encoding="UTF-8"?>
<xmldoc>
	<copyright>SAME AS NELSON SOFTWARE</copyright>

	<language>en_US</language>
	<keyword>fgetl</keyword>
	<short_description>Read string from a file without newline.</short_description>

	<syntax>
		<syntax_item>res = fgetl(f)</syntax_item>
	</syntax>
	
	<param_input>
		<param_input_item>
			<param_name>f</param_name>
			<param_description>a file descriptor</param_description>
		</param_input_item>
	</param_input>

	<param_output>

		<param_output_item>
			<param_name>res</param_name>
			<param_description>a string or -1</param_description>
		</param_output_item>
	</param_output>

	<description><p>Read string from a file, stopping after a newline or EOF have been read.</p>
<p>If there is no more character to read, fgets will return -1.</p>
<p>newline character removed of the string returned</p>
<p>characters encoding uses <b>fopen</b> parameter.</p>
</description>


	<used_function></used_function>
	<bibliography></bibliography>

<examples>

	<example_item>
		<example_item_type>nelson</example_item_type>
		<example_item_description></example_item_description>
		<example_item_data><![CDATA[fid = fopen([nelsonroot(), '/etc/startup.m']);

tline = fgetl(fid);
while ischar(tline)
    disp(tline)
    tline = fgetl(fid);
end

fclose(fid);]]>
		</example_item_data>
	
	</example_item>

</examples>

	<see_also>
		<see_also_item>
			<link linkend="${stream_manager}fclose">fclose</link>
		</see_also_item>
		<see_also_item>
			<link linkend="${stream_manager}fopen">fopen</link>
		</see_also_item>
		<see_also_item>
			<link linkend="${stream_manager}fgets">fgets</link>
		</see_also_item>
	</see_also>

	<history>
		<history_item>
			<history_version>1.0.0</history_version>
			<history_description>initial version</history_description>
		</history_item>
	</history>

	<authors>
		<author_item>Allan CORNET</author_item>
	</authors>
</xmldoc>


