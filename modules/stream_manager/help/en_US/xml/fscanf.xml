<?xml version="1.0" encoding="UTF-8"?>
<xmldoc>
  <copyright>SAME AS NELSON SOFTWARE</copyright>

  <language>en_US</language>
  <keyword>fscanf</keyword>
  <short_description>Reads data from a file.</short_description>

  <syntax>
    <syntax_item>R = fscanf(fid, format)</syntax_item>
    <syntax_item>[R, count] = fscanf(fid, format)</syntax_item>
    <syntax_item>[R, count] = fscanf(fid, format, sizeR)</syntax_item>

  </syntax>
  
  <param_input>

    <param_input_item>
      <param_name>fid</param_name>
      <param_description>a file descriptor</param_description>
    </param_input_item>
    
    <param_input_item>
      <param_name>format</param_name>
      <param_description>a string describing the format to used function.</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>sizeR</param_name>
      <param_description>desired dimensions of R.</param_description>
    </param_input_item>


  </param_input>
  
  <param_output>
  <param_output_item>
      <param_name>R</param_name>
      <param_description>matrix or character vector.</param_description>
    </param_output_item>
  </param_output>

  

  <description>
  <p>Read data in text from the file specified by the file descriptor fid.</p>
  <p>characters encoding uses <b>fopen</b> parameter.</p>
    <style>
table, th, td {
    border: 1px solid black;
}
  </style>
    <table style="width:100%">
  <tr>
    <th>Value type</th>
    <th>format</th>
    <th>comment</th>
  </tr>
    
<tr>
<td>Integer</td>
<td>%i</td>
<td>base 10</td>
</tr>

<tr>
<td>Integer signed</td>
<td>%d</td>
<td>base 10</td>
</tr>

<tr>
<td>Integer unsigned</td>
<td>%u</td>
<td>base 10</td>
</tr>

<tr>
<td>Integer</td>
<td>%o</td>
<td>Octal (base 8)</td>
</tr>

<tr>
<td>Integer</td>
<td>%x</td>
<td>Hexadecimal (lowercase)</td>
</tr>

<tr>
<td>Integer</td>
<td>%X</td>
<td>Hexadecimal (uppercase)</td>
</tr>

<tr>
<td>Floating-point number</td>
<td>%f</td>
<td>Fixed-point notation</td>
</tr>

<tr>
<td>Floating-point number</td>
<td>%e</td>
<td>Exponential notation (lowercase)</td>
</tr>

<tr>
<td>Floating-point number</td>
<td>%E</td>
<td>Exponential notation (uppercase)</td>
</tr>

<tr>
<td>Floating-point number</td>
<td>%g</td>
<td>Exponential notation (compact format, lowercase)</td>
</tr>

<tr>
<td>Floating-point number</td>
<td>%G</td>
<td>Exponential notation (compact format, uppercase)</td>
</tr>

<tr>
<td>Character</td>
<td>%c</td>
<td>Single character</td>
</tr>

<tr>
<td>String</td>
<td>%s</td>
<td>Character vector.</td>
</tr>
     </table>

  </description>

  <used_function></used_function>
  <bibliography></bibliography>

<examples>

  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description></example_item_description>
    <example_item_data><![CDATA[
M = rand(3, 2);
fw = fopen([tempdir, 'example_fscanf.txt'], 'wt');
fprintf(fw, "%f %f %f", M);
fclose(fw);

fd = fopen([tempdir, 'example_fscanf.txt'], 'r');
R = fscanf(fd, "%g %g %g");
fclose(fd);
R
]]>
    </example_item_data>
  
  </example_item>

</examples>

  <see_also>
    <see_also_item>
      <link linkend="${stream_manager}fopen">fopen</link>
    </see_also_item>
    
    <see_also_item>
      <link linkend="${stream_manager}fprintf">fprintf</link>
    </see_also_item>
    
    <see_also_item>
      <link linkend="${stream_manager}dlmwrite">dlmwrite</link>
    </see_also_item>
  </see_also>

  <history>
    <history_item>
      <history_version>1.0.0</history_version>
      <history_description>initial version</history_description>
    </history_item>
  </history>

  <authors>
    <author_item>Allan CORNET</author_item>
  </authors>
</xmldoc>


