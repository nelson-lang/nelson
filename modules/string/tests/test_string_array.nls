//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
R = strings(3,3);
assert_isequal(R{1}, '');
assert_isequal(R(1), "");
assert_checkerror('R{1} = 3', _('{} assignment expects a character vector.'));
R(1) = '3';
//=============================================================================
S = ['open'; ' is '; 'not '; 'free'];
R = string(S);
REF = ["open"; " is "; "not "; "free"];
assert_isequal(R, REF);
//=============================================================================
A = 'abcdefghifklmnopqr';
B = reshape(A, 3, 2, 3);
R = string(B);
REF = ["ad",    "gf",    "mp";
    "be",    "hk",    "nq";
    "cf",    "il",    "or"];
assert_isequal(R, REF);
//=============================================================================
R = string({'Jan','Feb'});
R(5) = 'Jun';
REF = ["Jan", "Feb", string(NaN), string(NaN), "Jun"];
assert_isequal(R, REF);
//=============================================================================
R(5,5) = 'May';
REF = ["Jan" ,"Feb", string(NaN), string(NaN), "Jun";
 string(NaN), string(NaN), string(NaN), string(NaN), string(NaN);
 string(NaN), string(NaN), string(NaN), string(NaN), string(NaN);
 string(NaN), string(NaN), string(NaN), string(NaN), string(NaN);
 string(NaN), string(NaN), string(NaN), string(NaN), "May"];
 assert_isequal(R, REF);
//=============================================================================
