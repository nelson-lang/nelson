<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
	<copyright>SAME AS NELSON SOFTWARE</copyright>

	<language>en_US</language>
	<keyword>mexAtExit</keyword>
	<short_description
  >Register a function to be called when the MEX-file is cleared or when Nelson exits</short_description>
	<syntax>
		<syntax_item>#include "mex.h"</syntax_item>
		<syntax_item>int mexAtExit(void (*ExitFcn)(void));</syntax_item>
	</syntax>
	
	<param_input>
		<param_input_item>
			<param_name>ExitFcn</param_name>
			<param_description
      >Pointer to function you wish to run on exit.</param_description>
		</param_input_item>
	</param_input>

  <param_output>
    <param_output_item>
      <param_name>returned value</param_name>
      <param_description>returns 0.</param_description>
    </param_output_item>
  </param_output>

	<description>
		<p>Each MEX can register only one active exit subroutine at a time.</p>
		<p><b
      >mexAtExit</b> registers a subroutine to be called just when Nelson is finished or <b
      >clear</b> is called.</p>
	</description>

	<used_function />
	<bibliography />

<examples>
	<example_item>
		<example_item_type>nelson</example_item_type>
		<example_item_description />
		<example_item_data
      ><![CDATA[edit([modulepath('mex', 'tests'), '/test_mexAtExit.m'])]]>
		</example_item_data>
	</example_item>

</examples>
	<see_also>
		<see_also_item>
			<link linkend="${core}exit">exit</link>
		</see_also_item>
		<see_also_item>
			<link linkend="${memory_manager}clear">clear</link>
		</see_also_item>

	</see_also>

	<history>
		<history_item>
			<history_version>1.0.0</history_version>
			<history_description>initial version</history_description>
		</history_item>
	</history>

	<authors>
		<author_item>Allan CORNET</author_item>
	</authors>
</xmldoc>
