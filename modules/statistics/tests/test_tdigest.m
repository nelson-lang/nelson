%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
rng('default');
td = tdigest();
td = td + randn(1, 1000);
R1 = td.quantile([0.05, 0.50, 0.95]);
R2 = td.percentile([5, 50, 95]);
assert_isequal(R1, R2);
assert_isapprox(R1, [-1.5640; -0.0333; 1.7456], 1e-4);
%=============================================================================
td = tdigest([100 NaN 300]);
R = td.percentile([5, 50, 95]);
REF = [ 100; 200; 300];
assert_isequal(R, REF);
%=============================================================================
td = tdigest(100);
a= 1:5000;
td = td + a;
R = td.percentile([5, 50, 95]);
REF = [2.505000000000000e+02;
     2.500500000000000e+03;
     4.750500000000000e+03];
assert_isapprox(R, REF, 1e1);
%=============================================================================
td = tdigest(100);
a= 5000:-1:1;
td = td + a;
R = td.percentile([5, 50, 95]);
REF = [2.505000000000000e+02;
     2.500500000000000e+03;
     4.750500000000000e+03];
assert_isapprox(R, REF, 1e1);
%=============================================================================
td = tdigest(100);
a = cos(5000:-1:1);
td = td + a;
R = td.percentile([5, 50, 95]);
REF = [-0.9874;
   -0.0000;
    0.9874];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
