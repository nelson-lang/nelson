<?xml version="1.0" encoding="UTF-8"?>
<xmldoc>
	<copyright>SAME AS NELSON SOFTWARE</copyright>

	<language>en_US</language>
	<keyword>audioread</keyword>
	<short_description>Read an audio file.</short_description>

	<syntax>
    <syntax_item>y = audioread(filename)</syntax_item>
    <syntax_item>[y, fs] = audioread(filename)</syntax_item>
    <syntax_item>[y, fs] = audioread(filename, range)</syntax_item>
    <syntax_item>[y, fs] = audioread(filename, type)</syntax_item>
    <syntax_item>[y, fs] = audioread(filename, range, type)</syntax_item>
	</syntax>
	
	<param_input>
		<param_input_item>
			<param_name>filename</param_name>
			<param_description>a string: an existing filename.</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>range</param_name>
			<param_description>a vector: [start end].</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>type</param_name>
			<param_description>a string: 'double' or 'native'.</param_description>
		</param_input_item>
	</param_input>

	<param_output>
		<param_output_item>
			<param_name>y</param_name>
			<param_description>a matrix: audio data.</param_description>
		</param_output_item>
		<param_output_item>
			<param_name>fs</param_name>
			<param_description>an integer value: sampling rate.</param_description>
		</param_output_item>

	</param_output>

	<description>
		<p><b>audioread</b> reads an audio file.</p>
    <p>Supported format: 'wav', 'ogg', 'flac', 'mp3', 'caf', 'au', 'aiff'. See <b>audiosupportedformats</b> function to have all supported formats.</p>
    <p>If <b>type</b> is 'native' then audio data depends on the file format (single, double, integers).</p>
	</description>

	<used_function></used_function>
	<bibliography></bibliography>

<examples>


	<example_item>
		<example_item_type>nelson</example_item_type>
		<example_item_description></example_item_description>
		<example_item_data><![CDATA[wav_audio = [modulepath('audio'), '/examples/haha.wav'];
[y, fs] = audioread(wav_audio);
playObj = audioplayer(y, fs);
playblocking(playObj)
delete(playObj)
clear playObj]]>
		</example_item_data>
	</example_item>

</examples>

  <see_also>
    <see_also_item>
      <link linkend="${audio}playblocking">playblocking</link>
    </see_also_item>
    <see_also_item>
      <link linkend="${audio}audioplayer">audioplayer</link>
    </see_also_item>
    <see_also_item>
      <link linkend="${audio}audiosupportedformats">audiosupportedformats</link>
    </see_also_item>
    <see_also_item>
      <link linkend="${audio}audiowrite">audiowrite</link>
    </see_also_item>

  </see_also>


	<history>
		<history_item>
			<history_version>1.0.0</history_version>
			<history_description>initial version</history_description>
		</history_item>
	</history>

	<authors>
		<author_item>Allan CORNET</author_item>
	</authors>
</xmldoc>


