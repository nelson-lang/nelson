<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
	<copyright>SAME AS NELSON SOFTWARE</copyright>

	<language>en_US</language>
	<keyword>mu2lin</keyword>
	<short_description
  >Convert audio data from mu-law to linear signal.</short_description>

	<syntax>
		<syntax_item>y = mu2lin(mu)</syntax_item>
	</syntax>
	
	<param_input>
		<param_input_item>
			<param_name>mu</param_name>
			<param_description
      > mu-law encoded 8-bit audio signals, with 0 ≤ mu ≤ 255.</param_description>
		</param_input_item>
	</param_input>

	<param_output>
		<param_output_item>
			<param_name>y</param_name>
			<param_description>linear signal.</param_description>
		</param_output_item>
	</param_output>

	<description>
	<p><b>y = mu2lin(mu)</b> converts audio data from mu-law to linear.</p>
	</description>
	<used_function />
	<bibliography
  >"A New Digital Technique for Implementation of Any Continuous PCM Companding Law," Villeret, Michel, et al. 1973 IEEE Int. Conf. on Communications, Vol 1, 1973, pg. 11.12-11.17.</bibliography>

<examples>
	<example_item>
		<example_item_type>nelson</example_item_type>
		<example_item_description />
		<example_item_data><![CDATA[l = mu2lin([0:20:255])]]>
		</example_item_data>
	</example_item>

</examples>

  <see_also>
    <see_also_item>
      <link linkend="${audio}audioplayer">audioplayer</link>
    </see_also_item>
    <see_also_item>
      <link linkend="${audio}lin2mu">lin2mu</link>
    </see_also_item>
  </see_also>



	<history>
		<history_item>
			<history_version>1.0.0</history_version>
			<history_description>initial version</history_description>
		</history_item>
	</history>

	<authors>
		<author_item>Allan CORNET</author_item>
	</authors>
</xmldoc>
