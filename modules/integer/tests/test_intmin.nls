%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU Lesser General Public
% License as published by the Free Software Foundation; either
% version 2.1 of the License, or (at your option) any later version.
%
% Alternatively, you can redistribute it and/or
% modify it under the terms of the GNU General Public License as
% published by the Free Software Foundation; either version 2 of
% the License, or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU Lesser General Public License for more details.
%
% You should have received a copy of the GNU Lesser General Public
% License along with this program. If not, see <http://www.gnu.org/licenses/>.
% LICENCE_BLOCK_END
%=============================================================================
assert_isequal(nargin('intmin'), -1);
assert_isequal(nargout('intmin'), -1);
%=============================================================================
assert_isequal(intmin(), intmin('int32'));
assert_isequal(intmin('int32'), int32(-2147483648));
assert_isequal(intmin('int8'), int8(-128));
assert_isequal(intmin('uint8'), uint8(0));
assert_isequal(intmin('int16'), int16(-32768));
assert_isequal(intmin('uint16'), uint16(0));
assert_isequal(intmin('uint32'), uint32(-2147483648));
assert_isequal(intmin('int64'), int64(-9223372036854775808));
assert_isequal(intmin('uint64'), uint64(0));
%=============================================================================
assert_checkerror('intmin(''uint64'', 3)', _('Wrong number of input arguments.'));
assert_checkerror('intmin(3)', _('Wrong type for argument #1: string expected.'));
assert_checkerror('intmin(''t'')', _('The name of an integer class expected.'));
assert_checkerror('[a, b] = intmin()', _('Wrong numbers of output arguments.'));
%=============================================================================
