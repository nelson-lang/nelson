//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// This file is part of the Nelson.
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// Alternatively, you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program. If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
R = 3.3 - int16(3);
REF = int16(0);
assert_isequal(R, REF)
//=============================================================================
R = int16(4) - 4;
REF = int16(0);
assert_isequal(R, REF);
//=============================================================================
assert_checkerror('R = single(3.3) - int16(3);', _('function single_minus_int16 undefined.'));
//=============================================================================
assert_checkerror('R = int16(4) - single(4);', _('function int16_minus_single undefined.'));
//=============================================================================
R = int16(4) - int16(4);
REF = int16(0);
assert_isequal(R, REF);
//=============================================================================
assert_checkerror('R = int16(4) - int8(4);', _('Integers of the same class expected.'));
//=============================================================================
