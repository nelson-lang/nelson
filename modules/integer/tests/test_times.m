%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
R = intmax('int8') .* 2;
R = intmax('int8') .* -2;
%=============================================================================
R = intmax('int8') .* intmax('int8');
REF = intmax('int8');
assert_isequal(R, REF);
%=============================================================================
R = intmax('int8') .* intmin('int8');
REF = intmin('int8');
assert_isequal(R, REF);
%=============================================================================
R = intmin('int8') .* intmax('int8');
REF = intmin('int8');
assert_isequal(R, REF);
%=============================================================================
R = intmin('int8') .* intmin('int8');
REF = intmax('int8');
assert_isequal(R, REF);
%=============================================================================
R = int8([1 2]) .* 3;
REF =  int8([3 6]);
assert_isequal(R, REF);
%=============================================================================
R = 3 .* int8([1 2]);
REF =  int8([3 6]);
assert_isequal(R, REF);
%=============================================================================
R = int8([1 2]) .* int8([3, 4]);
REF = int8([3 8]);
assert_isequal(R, REF);
%=============================================================================
msg = _('Integers can only be combined with integers of the same class, or scalar doubles.');
assert_checkerror('R = single(3) .* int8([1 2]);', msg);
assert_checkerror('R = int8([1 2]) .* single(3);', msg);
%=============================================================================
