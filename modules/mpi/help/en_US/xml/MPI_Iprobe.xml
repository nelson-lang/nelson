<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
  <copyright>SAME AS NELSON SOFTWARE</copyright>

  <language>en_US</language>
  <keyword>MPI_Iprobe</keyword>
  <short_description>Nonblocking test for a message.</short_description>

  <syntax>
    <syntax_item>[flag, stat, info] = MPI_Iprobe(rank, tag)</syntax_item>
    <syntax_item>[flag, stat, info] = MPI_Iprobe(rank, tag, comm)</syntax_item>

  </syntax>

  <param_input>
    <param_input_item>
      <param_name>rank</param_name>
      <param_description>an integer value: source rank.</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>tag</param_name>
      <param_description>an integer value: message tag.</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>comm</param_name>
      <param_description>a MPI_Comm object.</param_description>
    </param_input_item>
  </param_input>

  <param_output>
    <param_output_item>
      <param_name>flag</param_name>
      <param_description
      >an integer value: 1 if the message is ready to be received, 0 if it is not.</param_description>
    </param_output_item>

    <param_output_item>
      <param_name>stat</param_name>
      <param_description
      >a struct: source rank, message tag, error, count, cancelled for the accepted message.</param_description>
    </param_output_item>

    <param_output_item>
      <param_name>info</param_name>
      <param_description
      >an integer value:  0 (MPI_SUCCESS) other value is an error.</param_description>
    </param_output_item>
  </param_output>


  <description>
  <p>Nonblocking test for a message.</p> 
</description>

  <used_function />
  <bibliography />

  <see_also>
    <see_also_item>
      <link linkend="${mpi}MPI_Probe">MPI_Probe</link>
    </see_also_item>
  </see_also>


<examples>

  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description
      >mpiexec([modulepath('mpi'), '/examples/help_examples/MPI_Iprobe.m'], 4)</example_item_description>
    <example_item_data
      ><![CDATA[if ~MPI_Initialized()
  MPI_Init();
end
comm = MPI_Comm_object();
world_rank = MPI_Comm_rank();
world_size = MPI_Comm_size();

[FLAG, STAT, INFO] = MPI_Iprobe(world_rank,1, comm)

if MPI_Initialized()
  MPI_Finalize();
end
]]>
    </example_item_data>
  </example_item>

</examples>


  <history>
    <history_item>
      <history_version>1.0.0</history_version>
      <history_description>initial version</history_description>
    </history_item>
  </history>

  <authors>
    <author_item>Allan CORNET</author_item>
  </authors>
</xmldoc>
