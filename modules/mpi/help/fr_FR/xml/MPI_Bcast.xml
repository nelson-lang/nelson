<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
        <copyright>SAME AS NELSON SOFTWARE</copyright>
        <language>fr_FR</language>
        <keyword>MPI_Bcast</keyword>
        <short_description
  >Diffuse un message depuis le processus "root" vers tous les autres processus du communicateur</short_description>
    <syntax>
        <syntax_item>A = MPI_Bcast(A, Root)</syntax_item>
        <syntax_item>A = MPI_Bcast(A, Root, Comm)</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
            <param_name>A</param_name>
            <param_description>variable Nelson.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>Root</param_name>
        <param_description
      >entier : rang du root de diffusion.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>Comm</param_name>
            <param_description>objet MPI_Comm.</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
            <param_name>A</param_name>
            <param_description>tableau diffusé.</param_description>
        </param_output_item>
    </param_output>
    <description>
        <p
    >Cette fonction est utilisée pour diffuser un tableau à tous les membres du groupe.</p>
    </description>
    <used_function />
    <bibliography />
    <examples>
        <example_item>
            <example_item_type>nelson</example_item_type>
            <example_item_description
      >mpiexec([modulepath('mpi'), '/examples/help_examples/MPI_Bcast.m'], 4)</example_item_description>
            <example_item_data
        runnable="false"
      ><![CDATA[
if ~MPI_Initialized()
  MPI_Init();
end
my_rank = MPI_Comm_rank();
num_ranks = MPI_Comm_size();
root = 0;
if (my_rank == 0)
  buff = 777;
else
  buff = 0;
end
disp(['rank: ', int2str(my_rank), ': before Bcast, buff is ', int2str(buff)])
buff = MPI_Bcast(buff, root);
disp(['rank: ', int2str(my_rank), ': after Bcast, buff is ', int2str(buff)])
if MPI_Initialized()
  MPI_Finalize();
end
]]></example_item_data>
        </example_item>
    </examples>
    <see_also>
        <see_also_item>
            <link linkend="${mpi}MPI_Barrier">MPI_Barrier</link>
        </see_also_item>
    </see_also>
    <history>
        <history_item>
            <history_version>1.0.0</history_version>
            <history_description>version initiale</history_description>
        </history_item>
    </history>
    <authors>
        <author_item>Allan CORNET</author_item>
    </authors>
</xmldoc>
