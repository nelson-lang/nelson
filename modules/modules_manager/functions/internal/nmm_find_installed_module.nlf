%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU Lesser General Public
% License as published by the Free Software Foundation; either
% version 2.1 of the License, or (at your option) any later version.
%
% Alternatively, you can redistribute it and/or
% modify it under the terms of the GNU General Public License as
% published by the Free Software Foundation; either version 2 of
% the License, or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU Lesser General Public License for more details.
%
% You should have received a copy of the GNU Lesser General Public
% License along with this program. If not, see <http://www.gnu.org/licenses/>.
% LICENCE_BLOCK_END
%=============================================================================
function [module_name, module_data] = nmm_find_installed_module(module_or_path)
   module_name = [];
   module_data = struct([]);

   modules = nmm_list();
   if ~isempty(modules)
      if isfield(modules, module_or_path)
         module_name = module_or_path;
         module_data = getfield(modules, module_or_path);
      else
         if isdir(module_or_path)
            module_or_path = fullpath(module_or_path);
            if ~endsWith(module_or_path, '/')
               module_or_path = [module_or_path, '/'];
            end
            for m = fieldnames(modules)'
               s = getfield(modules, m{1});
               if strcmp(s.path, module_or_path)
                  module_name = m{1};
                  module_data = s;
                  break;
               end
            end
         end
      end
   end
endfunction
