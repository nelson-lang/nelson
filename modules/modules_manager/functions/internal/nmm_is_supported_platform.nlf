%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU Lesser General Public
% License as published by the Free Software Foundation; either
% version 2.1 of the License, or (at your option) any later version.
%
% Alternatively, you can redistribute it and/or
% modify it under the terms of the GNU General Public License as
% published by the Free Software Foundation; either version 2 of
% the License, or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU Lesser General Public License for more details.
%
% You should have received a copy of the GNU Lesser General Public
% License along with this program. If not, see <http://www.gnu.org/licenses/>.
% LICENCE_BLOCK_END
%=============================================================================
function [r, msg] = nmm_is_supported_platform(plaforms)
    r = false;
    msg = sprintf(_('Platform not supported: %s'), sprintf('%s ', string(plaforms')));
    validPlatforms = ["all", "win32" , "win64", "maci64", "maci32", "glnxa64", "glnxa32"];
    if all(contains(plaforms, validPlatforms))
       currentArch = computer('arch');
    else
       return
    end
    currentArch = computer('arch');
    if ischar(plaforms)
        if any(contains(validPlatforms, plaforms))
            if strcmp(plaforms, "all")
                r = true;
                msg = '';
            else
                if strcmp(plaforms, currentArch)
                    r = true;
                else
                    r = false;
                    msg = sprintf(_('Platform not supported: %s'), plaforms);
                end
            end
        else
            r = false;
            msg = sprintf(_('Platform not supported: %s'), plaforms);
        end
    else
        if iscell(plaforms)
            if any(contains(validPlatforms, plaforms))
                r = true;
                msg = '';
            else
                r = false;
                msg = sprintf(_('Platform not supported: %s'), plaforms);
            end
        else
            msg = _('Invalid type in platforms');
        end
    end
endfunction
%=============================================================================
