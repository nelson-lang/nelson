<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
	<copyright>SAME AS NELSON SOFTWARE</copyright>

	<language>en_US</language>
	<keyword>bitxor</keyword>
	<short_description>Bit-wise XOR</short_description>

	<syntax>
		<syntax_item>C = bitxor(A, B)</syntax_item>
		<syntax_item>C = bitxor(A, B, assumedtype)</syntax_item>
	</syntax>

	<param_input>
		<param_input_item>
			<param_name>A</param_name>
			<param_description>a variable: double, logical, integer</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>B</param_name>
			<param_description>a variable: double, logical, integer</param_description>
		</param_input_item>
		<param_input_item>
			<param_name>assumedtype</param_name>
			<param_description
      >'int64', 'int32', 'int16', 'int8', 'uint64', 'uint32', 'uint16' or 'uint8'.</param_description>
		</param_input_item>
	</param_input>

	<param_output>

		<param_output_item>
			<param_name>C</param_name>
			<param_description>Bit-wise XOR result</param_description>
		</param_output_item>
	</param_output>

	<description>
		<p><b>C = bitxor(A, B)</b> returns the bit-wise XOR of <b>A</b> and <b
      >B</b>.</p>
	</description>


	<used_function />
	<bibliography />

<examples>

	<example_item>
		<example_item_type>nelson</example_item_type>
		<example_item_description />
		<example_item_data
      ><![CDATA[A = uint16([0 1; 0 1]);
B = uint16([0 0; 1 1]);
R = bitxor(A, B)
]]>
		</example_item_data>
	</example_item>

</examples>

	<see_also>
		<see_also_item>
			<link linkend="${operators}bitand">bitand</link>
		</see_also_item>
		<see_also_item>
			<link linkend="${operators}bitor">bitor</link>
		</see_also_item>
	</see_also>

	<history>
		<history_item>
			<history_version>1.0.0</history_version>
			<history_description>initial version</history_description>
		</history_item>
	</history>

	<authors>
		<author_item>Allan CORNET</author_item>
	</authors>
</xmldoc>
