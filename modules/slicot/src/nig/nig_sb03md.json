{
  "NELSON_NAME": "slicot_sb03md",
  "NELSON_NAMESPACE": "Slicot",
  "MODULE_NAME": "slicot",
  "SYMBOL": "sb03md",
  "LANGUAGE": "fortran",
  "VARIABLES": [
    {
      "NAME": "DICO",
      "TYPE": "character",
      "MODE": "input",
      "SUPPORTED_VALUES": ["C", "D"],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "JOB",
      "TYPE": "character",
      "MODE": "input",
      "SUPPORTED_VALUES": ["X", "S", "B"],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "FACT",
      "TYPE": "character",
      "MODE": "input",
      "SUPPORTED_VALUES": ["F", "N"],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "TRANA",
      "TYPE": "character",
      "MODE": "input",
      "SUPPORTED_VALUES": ["N", "T", "C"],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "N",
      "TYPE": "integer",
      "MODE": "local",
      "SUPPORTED_VALUES": [],
      "VALUE": "(int)A.getDimensions().getRows()",
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "A",
      "TYPE": "double_array",
      "MODE": "input",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "LDA",
      "TYPE": "integer",
      "MODE": "local",
      "SUPPORTED_VALUES": [],
      "VALUE": "std::max(1, (int)A.getDimensions().getRows())",
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "U",
      "TYPE": "double_array",
      "MODE": "in_out",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "LDU",
      "TYPE": "integer",
      "MODE": "local",
      "SUPPORTED_VALUES": [],
      "VALUE": "std::max(1, (int)A.getDimensions().getRows())",
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "C",
      "TYPE": "double_array",
      "MODE": "in_out",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "LDC",
      "TYPE": "integer",
      "MODE": "local",
      "SUPPORTED_VALUES": [],
      "VALUE": "std::max(1, (int)A.getDimensions().getRows())",
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "SCALE",
      "TYPE": "double",
      "MODE": "output",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "SEP",
      "TYPE": "double",
      "MODE": "output",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "FERR",
      "TYPE": "double",
      "MODE": "output",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "WR",
      "TYPE": "double_array",
      "MODE": "output",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": "1",
      "DIMENSION_N": "(int)A.getDimensions().getRows()"
    },
    {
      "NAME": "WI",
      "TYPE": "double_array",
      "MODE": "output",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": "1",
      "DIMENSION_N": "(int)A.getDimensions().getRows()"
    },
    {
      "NAME": "IWORK",
      "TYPE": "integer_array",
      "MODE": "local",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": "(int)A.getDimensions().getRows()",
      "DIMENSION_N": "(int)A.getDimensions().getRows()"
    },
    {
      "NAME": "DWORK",
      "TYPE": "double_array",
      "MODE": "local",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": "1",
      "DIMENSION_N": "std::max(2 * (int)A.getDimensions().getRows() * (int)A.getDimensions().getRows() + 2 * (int)A.getDimensions().getRows(), 3 * (int)A.getDimensions().getRows())"
    },
    {
      "NAME": "LDWORK",
      "TYPE": "integer",
      "MODE": "local",
      "SUPPORTED_VALUES": [],
      "VALUE": "std::max(2 * (int)A.getDimensions().getRows() * (int)A.getDimensions().getRows() + 2 * (int)A.getDimensions().getRows(), 3 * (int)A.getDimensions().getRows())",
      "DIMENSION_M": [],
      "DIMENSION_N": []
    },
    {
      "NAME": "INFO",
      "TYPE": "integer",
      "MODE": "output",
      "SUPPORTED_VALUES": [],
      "VALUE": [],
      "DIMENSION_M": [],
      "DIMENSION_N": []
    }
  ]
}
