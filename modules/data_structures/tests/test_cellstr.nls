//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
assert_isequal(nargin('cellstr'), 1);
assert_isequal(nargout('cellstr'), 1);
//=============================================================================
A = ["Monday", "Tuesday", "Friday"];
R = cellstr(A);
REF = {'Monday', 'Tuesday', 'Friday'};
assert_isequal(R, REF);
//=============================================================================
A = {'Monday', 'Tuesday', 'Friday'};
R = cellstr(A);
REF = {'Monday', 'Tuesday', 'Friday'};
assert_isequal(R, REF);
//=============================================================================
R = cellstr({});
REF = {};
assert_isequal(R, REF);
//=============================================================================
assert_checkerror('R = cellstr({1, ''e''});', _('Cell must be string scalars or character arrays.'));
//=============================================================================
R = cellstr('');
REF = {''};
assert_isequal(R, REF);
//=============================================================================
R = cellstr(['ab','cd']);
REF = {'abcd'};
assert_isequal(R, REF);
//=============================================================================
R = cellstr(['ab';'cd']);
REF = {'ab'; 'cd'};
assert_isequal(R, REF);
//=============================================================================
assert_checkerror('R = cellstr([1 3]);', _(['Type not supported:' ,' ', class(3)]));
//=============================================================================
