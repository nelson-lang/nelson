%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
assert_isequal(nargin('isfield'), 2);
assert_isequal(nargout('isfield'), 1);
%=============================================================================
S.a = 'r';
S.b = 1;
assert_istrue(isfield(S,'a'));
assert_istrue(isfield(S,'b'));
assert_isfalse(isfield(S,'c'));
%=============================================================================
S.a = 'r';
S.b = 1;
S.One = 1;
S.Two = 2;
S.Three = pi;
R = isfield(S, {'a', 'One', 'Three', 3.14, 'two', 'Two'});
REF = [true   true   true   false  false   true];
assert_isequal(R, REF);
%=============================================================================
R = isfield(S, {'a', 'One', 'Three'; 3.14, 'two', 'Two'});
REF = logical([1, 1, 1;   0, 0, 1]);
assert_isequal(R, REF);
%=============================================================================
R = isfield(S, {'a', 'One'; 'Three', 3.14; 'two', 'Two'});
REF = logical([1, 1;   1, 0;  0, 1]);
assert_isequal(R, REF);
%=============================================================================
R = isfield(S, {});
assert_isfalse(R);
%=============================================================================
S = struct();
R = isfield(S, '');
assert_isfalse(R);
%=============================================================================
S = struct();
R = isfield(S, {});
assert_isfalse(R);
%=============================================================================
R = isfield(1, {});
assert_isfalse(R);
%=============================================================================
R = isfield(1, 1);
assert_isfalse(R);
%=============================================================================
