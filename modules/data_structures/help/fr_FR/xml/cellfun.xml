<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>cellfun</keyword>
    <short_description
  >Évalue une fonction sur un tableau cellulaire.</short_description>
    <syntax>
        <syntax_item>R = cellfun(function_name, ce)</syntax_item>
        <syntax_item>R = cellfun(function_handle, ce)</syntax_item>
        <syntax_item
    >[R1, ... , Rp] = cellfun(function_handle, ce1, ..., cep)</syntax_item>
        <syntax_item
    >[R1, ... , Rp] = cellfun(function_handle, ce1, ..., cep, name, value)</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
            <param_name>function_handle</param_name>
            <param_description>un handle de fonction.</param_description>
        </param_input_item>
        <param_input_item>
        <param_name>ce1, ... , cep</param_name>
        <param_description
      >tableaux cellulaires correspondant aux p entrées requises par function_handle.</param_description>
        </param_input_item>
        <param_input_item>
        <param_name>name, value pair</param_name>
        <param_description
      >'UniformOutput' : true ou false, 'ErrorHandler' : une fonction d'erreur.</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
            <param_name>R1, ... , Rp</param_name>
            <param_description>Sorties de la fonction</param_description>
        </param_output_item>
    </param_output>
    <description>
        <p>
            <b
      >cellfun</b> applique une fonction à chaque élément d'un tableau cellulaire.</p>
        </description>
        <used_function />
        <bibliography />
        <examples>
            <example_item>
                <example_item_type>nelson</example_item_type>
                <example_item_description />
                <example_item_data
        runnable="cli"
      ><![CDATA[greetings = {'Hello', 'Guten Tag', 'Sawadee', 'Bonjour', 'Namaste', ''};
R = cellfun('size', greetings, 1)
R1 = cellfun('size', greetings, 2)]]></example_item_data>
            </example_item>
            <example_item>
                <example_item_type>nelson</example_item_type>
                <example_item_description />
                <example_item_data
        runnable="cli"
      ><![CDATA[C = {1:10, eye(3,4), eye(5,6)};
f = str2func('size');
[nrows_1, ncols_1] = cellfun(f, C,'UniformOutput', false)
[nrows_2, ncols_2] = cellfun(f, C,'UniformOutput', true)]]></example_item_data>
            </example_item>
            <example_item>
                <example_item_type>nelson</example_item_type>
                <example_item_description
      >functions to define for next example:</example_item_description>
                <example_item_data
      ><![CDATA[function r = fun1(x, y)
r = x > y;
end

function result = errorfun(S, varargin)
	disp(nargin())
	disp(S)
	disp(class(varargin))
	disp(size(varargin))
	disp(varargin{1})
	disp(varargin{2})
	result = false;
end]]></example_item_data>
            </example_item>
            <example_item>
                <example_item_type>nelson</example_item_type>
                <example_item_description />
                <example_item_data
        runnable="cli"
      ><![CDATA[R = str2func('fun1');
H =  str2func('errorfun');
A = {rand(3)};
B = {rand(5)};
AgtA = cellfun(R, A, B, 'ErrorHandler', H, 'UniformOutput', true)
AgtB = cellfun(R, A, B, 'ErrorHandler', H, 'UniformOutput', false)]]></example_item_data>
            </example_item>
        </examples>
        <see_also>
            <see_also_item>
                <link linkend="${data_structures}cell">cell</link>
            </see_also_item>
        </see_also>
        <history>
            <history_item>
                <history_version>1.0.0</history_version>
                <history_description>version initiale</history_description>
            </history_item>
        </history>
        <authors>
            <author_item>Allan CORNET</author_item>
        </authors>
    </xmldoc>
