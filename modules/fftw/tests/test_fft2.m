%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
assert_isequal(nargin('fft2'), 3);
assert_isequal(nargout('fft2'), 1);
%=============================================================================
R = fft2(ones(3, 0));
REF = zeros(3, 0);
assert_isequal(R, REF);
%=============================================================================
R = fft2(1:5);
REF = [15.0000 + 0.0000i,  -2.5000 + 3.4410i,  -2.5000 + 0.8123i,  -2.5000 - 0.8123i,  -2.5000 - 3.4410i];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
R = fft2(eye(3, 3));
REF = [3.0000         0         0;
0    0.0000    3.0000;
0    3.0000    0.0000];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
R = fft2(Inf);
REF = Inf;
assert_isequal(R, REF);
%=============================================================================
R = fft2(NaN);
REF = NaN;
assert_isequal(R, REF);
%=============================================================================
R = fft2(eye(5, 5), 2, 3);
REF = [2.0000 + 0.0000i   0.5000 - 0.8660i   0.5000 + 0.8660i;
   0.0000 + 0.0000i   1.5000 + 0.8660i   1.5000 - 0.8660i];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
   