%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
A = zeros(10);
A(3:7, 3:7) = ones(5);
H = [1 2 1; 0 0 0; -1 -2 -1];
R = filter2(H, A, 'full');
REF = [     0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0    -1    -3    -4    -4    -4    -3    -1     0     0     0;
0     0    -1    -3    -4    -4    -4    -3    -1     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     1     3     4     4     4     3     1     0     0     0;
0     0     1     3     4     4     4     3     1     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0];
assert_isequal(R, REF);
%=============================================================================
R = filter2(H, A, 'same');
REF = [     0     0     0     0     0     0     0     0     0     0;
0    -1    -3    -4    -4    -4    -3    -1     0     0;
0    -1    -3    -4    -4    -4    -3    -1     0     0;
0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0;
0     1     3     4     4     4     3     1     0     0;
0     1     3     4     4     4     3     1     0     0;
0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0];
assert_isequal(R, REF);
%=============================================================================
R = filter2(H, A);
assert_isequal(R, REF);
%=============================================================================
R = filter2(H, A, 'valid');
REF = [    -1    -3    -4    -4    -4    -3    -1     0;
-1    -3    -4    -4    -4    -3    -1     0;
 0     0     0     0     0     0     0     0;
 0     0     0     0     0     0     0     0;
 0     0     0     0     0     0     0     0;
 1     3     4     4     4     3     1     0;
 1     3     4     4     4     3     1     0;
 0     0     0     0     0     0     0     0];
 assert_isequal(R, REF);
%=============================================================================
