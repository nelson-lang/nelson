%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
assert_isequal(nargin('zp2tf'), -1);
assert_isequal(nargout('zp2tf'), -1);
%=============================================================================
assert_checkerror('zp2tf([-100 -2.01], [-5 -.9 -20.1], 1)', _('First argument must be a column vector.'))
%=============================================================================
[N, D] = zp2tf([-1; -2.01], [-5 -9.9 -20.1], 1);
N_REF = [0    1.0000    3.0100    2.0100];
D_REF = [1.0000   35.0000  348.9900  994.9500];
assert_isapprox(N, N_REF, 1e-3);
assert_isapprox(D, D_REF, 1e-3);
%=============================================================================
[N, D] = zp2tf([], [], 1);
N_REF = 1;
D_REF = 1;
assert_isequal(N, N_REF);
assert_isequal(D, D_REF);
%=============================================================================
z = [49.498, 0; -49.498, 16.362];
p = [0; -57.753; 53.851; 2.0831];
k = [18.182; 45.455];
[N, D] = zp2tf(z, p, k);
N_REF = 1.0e+04 * [0, 0, 0.0018, 0, -4.4547; 0, 0, 0.0045, -0.0744, 0];
D_REF = 1.0e+03 * [0.0010, 0.0018, -3.1182, 6.4786, 0];
assert_isapprox(N, N_REF, 1e-3);
assert_isapprox(D, D_REF, 1e-3);
%=============================================================================
