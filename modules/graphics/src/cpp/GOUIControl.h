//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// This file is part of the Nelson.
//=============================================================================
// LICENCE_BLOCK_BEGIN
// SPDX-License-Identifier: LGPL-3.0-or-later
// LICENCE_BLOCK_END
//=============================================================================
#pragma once
//=============================================================================
#include <string>
#include <QtCore/QPoint>
#include <QtGui/QKeyEvent>
#include "nlsGraphics_exports.h"
#include "GraphicsObject.hpp"
#include "GOWindow.hpp"
//=============================================================================
namespace Nelson {
//=============================================================================
class QPushButtonWidget;
//=============================================================================
class NLSGRAPHICS_IMPEXP GOUIControl : public QObject, public GraphicsObject
{
    Q_OBJECT
    QWidget* widget;
    GOWindow* parentGoWindow;

public:
    //=============================================================================
    GOUIControl();
    //=============================================================================
    ~GOUIControl() override;
    //=============================================================================
    std::wstring
    getType() override;
    //=============================================================================
    void
    updateState() override;
    //=============================================================================
    void
    paintMe(RenderInterface& gc) override;
    //=============================================================================
    void
    buildWidget(GOWindow* f);
    //=============================================================================
    void
    show();
    //=============================================================================
    void
    hide();
    //=============================================================================
    bool
    handleMouseEvent(
        QEvent* event, const std::wstring& callbackPropertyStr, const std::wstring& eventType);
    bool
    handleKeyEvent(
        QEvent* event, const std::wstring& callbackPropertyStr, const std::wstring& eventType);
    //=============================================================================
    void
    setFocus();
    //=============================================================================
private:
    //=============================================================================
    virtual void
    constructProperties();
    //=============================================================================
    void
    setupDefaults();
    //=============================================================================
    QPoint
    convertToBottomLeft(const QPoint& topLeftPos);
    //=============================================================================
    QWidget*
    getParentWidget();
    //=============================================================================
    void
    deleteWidget();
    //=============================================================================
    void
    pushButtonClicked();
    //=============================================================================
    void
    toggleButtonClicked();
    //=============================================================================
    void
    sliderClicked();
    //=============================================================================
    void
    radioButtonClicked();
    //=============================================================================
    void
    checkboxClicked();
    //=============================================================================
    void
    editClicked();
    //=============================================================================
    void
    listboxClicked();
    //=============================================================================
    void
    popupmenuClicked();
    //=============================================================================
    bool
    onStylePropertyChanged();
    //=============================================================================
    void
    createPushButton();
    //=============================================================================
    void
    createToggleButton();
    //=============================================================================
    void
    createRadioButton();
    //=============================================================================
    void
    createCheckBox();
    //=============================================================================
    void
    createSlider();
    //=============================================================================
    void
    createText();
    //=============================================================================
    void
    createEdit();
    //=============================================================================
    void
    createListBox();
    //=============================================================================
    void
    createPopupMenu();
    //=============================================================================
    void
    onStringPropertyChanged(bool newWidget);
    //=============================================================================
    void
    onStringChangedPushButton(bool newWidget);
    //=============================================================================
    void
    onStringChangedToggleButton(bool newWidget);
    //=============================================================================
    void
    onStringChangedRadioButton(bool newWidget);
    //=============================================================================
    void
    onStringChangedCheckBox(bool newWidget);
    //=============================================================================
    void
    onStringChangedText(bool newWidget);
    //=============================================================================
    void
    onStringChangedEdit(bool newWidget);
    //=============================================================================
    void
    onStringChangedListBox(bool newWidget);
    //=============================================================================
    void
    onStringChangedPopupMenu(bool newWidget);
    //=============================================================================
    void
    onPositionPropertyChanged(bool newWidget);
    //=============================================================================
    void
    onUnitsChanged(bool newWidget);
    //=============================================================================
    void
    onParentPositionChanged(bool newWidget);
    //=============================================================================
    void
    onVisiblePropertyChanged(bool newWidget);
    //=============================================================================
    void
    onCDataPropertyChanged(bool newWidget);
    //=============================================================================
    void
    onEditPropertyChanged(bool newWidget);
    //=============================================================================
    void
    onToggleButtonChanged(bool newWidget);
    //=============================================================================
    void
    onSliderChanged(bool newWidget);
    //=============================================================================
    void
    onCheckBoxChanged(bool newWidget);
    //=============================================================================
    void
    onRadioButtonChanged(bool newWidget);
    //=============================================================================
    void
    onToolTipsChanged(bool newWidget);
    //=============================================================================
    void
    onEnableChanged(bool newWidget);
    //=============================================================================
    void
    onValueChanged(bool newWidget);
    //=============================================================================
    void
    onBackgroundPropertyChanged(bool newWidget);
    //=============================================================================
    void
    onFontSizeOrUnitChanged(bool newWidget);
    //=============================================================================
    void
    onFontNameChanged(bool newWidget);
    //=============================================================================
    void
    onFontAngleChanged(bool newWidget);
    //=============================================================================
    void
    onFontWeightChanged(bool newWidget);
    //=============================================================================
    void
    onHAlignmentChanged(bool newWidget);
    //=============================================================================
    void
    onListTopBoxChanged(bool newWidget);
    //=============================================================================
    void
    onPopupMenuChanged(bool newWidget);
    //=============================================================================
    void
    tokenize(
        const std::wstring& str, std::vector<std::wstring>& tokens, const std::wstring& delimiters);
    //=============================================================================
    wstringVector
    getModifiers(QKeyEvent* keyEvent);
    std::wstring
    getKeyString(QKeyEvent* keyEvent);
    std::wstring
    getCharacterString(QKeyEvent* keyEvent);
    //=============================================================================
protected:
    void
    keyPressEvent(QKeyEvent* event);
    void
    keyReleaseEvent(QKeyEvent* event);
    //=============================================================================
public slots:
    void
    clicked();
    //=============================================================================
};
//=============================================================================
}
//=============================================================================
