//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// This file is part of the Nelson.
//=============================================================================
// LICENCE_BLOCK_BEGIN
// SPDX-License-Identifier: LGPL-3.0-or-later
// LICENCE_BLOCK_END
//=============================================================================
#pragma once
//=============================================================================
#include <list>
#include <vector>
#include "nlsGraphics_exports.h"
#include "GraphicsObject.hpp"
#include "RenderInterface.hpp"
//=============================================================================
namespace Nelson {
//=============================================================================
class NLSGRAPHICS_IMPEXP GOPatch : public GraphicsObject
{
    //=============================================================================
private:
    FaceList m_faces;
    virtual void
    buildPolygons(FaceList& faces);
    //=============================================================================
public:
    GOPatch();
    //=============================================================================
    ~GOPatch() override;
    //=============================================================================
    std::wstring
    getType() override;
    //=============================================================================
    virtual void
    constructProperties();
    //=============================================================================
    virtual void
    setupDefaults();
    //=============================================================================
    void
    paintMe(RenderInterface& gc) override;
    //=============================================================================
    void
    updateState() override;
    //=============================================================================
    std::vector<double>
    getLimits() override;
    //=============================================================================
};
//=============================================================================
}
//=============================================================================
