//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// This file is part of the Nelson.
//=============================================================================
// LICENCE_BLOCK_BEGIN
// SPDX-License-Identifier: LGPL-3.0-or-later
// LICENCE_BLOCK_END
//=============================================================================
#pragma once
//=============================================================================
#include "nlsGraphics_exports.h"
#include "ArrayOf.hpp"
//=============================================================================
namespace Nelson {
//=============================================================================
class NLSGRAPHICS_IMPEXP GOGenericProperty
{
    //=============================================================================
private:
    bool modified;
    //=============================================================================
public:
    GOGenericProperty() { modified = false; }
    //=============================================================================
    virtual ~GOGenericProperty() = default;
    //=============================================================================
    virtual ArrayOf
    get()
        = 0;
    //=============================================================================
    virtual std::wstring
    toWideString()
        = 0;
    //=============================================================================
    virtual void
    set(ArrayOf)
    {
        modified = true;
    }
    //=============================================================================
    void
    clearModified()
    {
        modified = false;
    }
    //=============================================================================
    bool
    isModified()
    {
        return modified;
    }
    //=============================================================================
    void
    forceAsModified()
    {
        modified = false;
    }
    //=============================================================================
};
//=============================================================================
};
//=============================================================================
