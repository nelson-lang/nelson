<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>patch</keyword>
    <short_description>Créer des patchs de polygones colorés</short_description>
    <syntax>
        <syntax_item>patch(X, Y, C)</syntax_item>
        <syntax_item>patch(X, Y, Z, C)</syntax_item>
        <syntax_item>patch('XData', X, 'YData', Y)</syntax_item>
        <syntax_item>patch('XData', X, 'YData', Y, 'ZData', Z)</syntax_item>
        <syntax_item>patch('Faces', F, 'Vertices', V)</syntax_item>
        <syntax_item>patch(S)</syntax_item>
        <syntax_item>patch(..., propertyName, propertyValue)</syntax_item>
        <syntax_item>patch(ax, ...)</syntax_item>
        <syntax_item>go = patch(...)</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
            <param_name>X</param_name>
            <param_description
      >Coordonnées x : vecteur ou matrice.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>Y</param_name>
            <param_description
      >Coordonnées y : vecteur ou matrice.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>Z</param_name>
            <param_description
      >Coordonnées z : vecteur ou matrice.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>C</param_name>
            <param_description
      >Tableau de couleurs : scalaire, vecteur, tableau m-par-n-par-3 de triplets RGB.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>ax</param_name>
            <param_description
      >Valeur scalaire d'objet graphique : conteneur parent, spécifié comme axes.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>propertyName</param_name>
            <param_description
      >Chaîne de caractères scalaire ou vecteur ligne.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>propertyValue</param_name>
            <param_description>Une valeur.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>S</param_name>
            <param_description
      >Structure avec des champs correspondant aux propriétés du patch et leurs valeurs.</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
            <param_name>go</param_name>
            <param_description>Objet graphique : type patch.</param_description>
        </param_output_item>
    </param_output>
    <description>
        <p><b
      >patch(X, Y, C)</b> crée une forme polygonale 2D avec des sommets définis par les coordonnées <b
      >X</b> et <b>Y</b>, et remplit la forme avec la couleur <b>C</b>.</p>
        <p><b
      >patch(X, Y, Z, C)</b> crée une forme polygonale 3D avec des sommets définis par les coordonnées <b
      >X</b>, <b>Y</b> et <b>Z</b>, et remplit la forme avec la couleur <b
      >C</b>.</p>
        <p><b
      >patch(..., PropertyName, PropertyValue, ...)</b> définit des propriétés optionnelles pour l'objet patch à l'aide de paires nom-valeur.</p>
        <p><b
      >patch('Faces', F, 'Vertices', V)</b> crée un ou plusieurs polygones.</p>
        <p><b>go = patch(...)</b> retourne le handle <b
      >go</b> de l'objet patch créé.</p>
        <p>Paires Nom-Valeur de propriétés :</p>
        <p><b
      >'FaceColor'</b> : couleur de la forme remplie. FaceColor peut être une chaîne de caractères ou un vecteur RGB à 3 éléments. Par défaut : <b
      >'flat'</b>.</p>
        <p><b
      >'EdgeColor'</b> : couleur des bords du polygone. EdgeColor peut être une chaîne de caractères ou un vecteur RGB à 3 éléments. Par défaut : <b
      >'none'</b>.</p>
        <p><b>'LineWidth'</b> : largeur des bords du polygone. Par défaut : <b
      >0.5</b>.</p>
        <p><b
      >'LineStyle'</b> : style des bords du polygone. LineStyle peut être une chaîne de caractères ou un code de style de ligne. Par défaut : <b
      >'-'</b>.</p>
        <p><b
      >'FaceAlpha'</b> : transparence de la forme remplie. FaceAlpha peut être un scalaire entre 0 et 1. Par défaut : <b
      >1</b>.</p>
        <p><b
      >'EdgeAlpha'</b> : transparence des bords du polygone. EdgeAlpha peut être un scalaire entre 0 et 1. Par défaut : <b
      >1</b>.</p>
        <p><b>'Parent'</b> : handle de l'objet parent du patch. Par défaut : <b
      >gca()</b>.</p>
        <p><b
      >'Vertices'</b> : matrice des coordonnées des sommets. La matrice doit être de taille N-par-2 ou N-par-3, où N est le nombre de sommets. Par défaut : les coordonnées des sommets sont spécifiées par les arguments <b
      >X</b>, <b>Y</b> et <b>Z</b>.</p>
        <p><b
      >CreateFcn</b> Callback (fonction, chaîne ou cellule) appelée lors de la création de l'objet. Définir cette propriété sur un composant existant n'a aucun effet.</p>
        <p><b
      >DeleteFcn</b> Callback (fonction, chaîne ou cellule) appelée lors de la suppression de l'objet.</p>
        <p><b
      >BeingDeleted</b> Indique que l'objet est en cours de suppression.</p>
    </description>
    <used_function />
    <bibliography />
    <examples>
        <example_item>
            <example_item_type>nelson</example_item_type>
            <example_item_description />
            <example_item_data
        runnable="adv-cli"
      ><![CDATA[fig = figure('Color', 'k');
ax.Color = 'k';  
f=0.1;
t=0:f^2:2*pi;
r=pi/4;
p=r*t+r;
patch([cos(p), 0], [sin(p), 0], 'y');
c = eye(3);
for a=2:2:6
  patch([t/4+a, a+r*(1+cos(t/2)),a], [-f*cos(3*(a+t))-r,r*sin(t/2),-1], c(a/2,:));
  patch(a +f*cos(t)'+r./[1,0.65], f*(2+sin(t)').*[1,1], 'k', 'EdgeColor', 'w', 'LineWidth', pi)
end
axis equal
axis off]]></example_item_data>
            <example_item_img
        src="../../images/patch_1.svg"
        align="middle"
        generate="true"
      />
        </example_item>
        <example_item>
            <example_item_type>nelson</example_item_type>
            <example_item_description />
            <example_item_data
        runnable="adv-cli"
      ><![CDATA[f =figure('Color', 'w');
x = [-1 1 0 -1];
y = [-1/sqrt(3) -1/sqrt(3) 2*sqrt(3)/3 -1/sqrt(3)];
plot(x,y,'k','LineWidth',3);
t = 0:0.001:2*pi;
xc = cos(t)/3+x';
yc = sin(t)/3-y';
for i = 1:3
    patch(xc(i,:),yc(i,:),'k');
end
patch(x,-y,'w','EdgeColor','w');
axis('equal')
axis('off')]]></example_item_data>
            <example_item_img
        src="../../images/patch_2.svg"
        align="middle"
        generate="true"
      />
        </example_item>
        <example_item>
            <example_item_type>nelson</example_item_type>
            <example_item_description
      >Nerfertiti 3D mask</example_item_description>
            <example_item_data
        runnable="adv-cli"
      ><![CDATA[nefertiti_directory = [modulepath('graphics', 'root'), '/examples/nefertiti-mask/'];
load([nefertiti_directory, 'nefertiti-mask.nh5']);
figure('Color', [1, 1, 1]);
patch('Faces', Faces, 'Vertices', Vertices, 'FaceVertexCData', Colors, ...
      'EdgeColor', 'none', ...
      'FaceColor', 'interp', 'FaceAlpha', 1);
axis equal
axis off 
view([0, 0, 1]);]]></example_item_data>
            <example_item_img
        src="../../images/patch_3.svg"
        align="middle"
        generate="true"
      />
        </example_item>
        <example_item>
            <example_item_type>nelson</example_item_type>
            <example_item_description>Alpha channel</example_item_description>
            <example_item_data
        runnable="adv-cli"
      ><![CDATA[x = [1 3 4 3 1 0];
y = [0 0 2 4 4 2];
z = [0 0 0 0 0 0];
figure();
hold on
patch(x,y,z,'cyan','FaceAlpha',0.3)
patch(x+2,y,z,'magenta','FaceAlpha',0.3)
patch(x+1,y+2,z,'yellow','FaceAlpha',0.3)]]></example_item_data>
            <example_item_img
        src="../../images/patch_4.svg"
        align="middle"
        generate="true"
      />
        </example_item>
    </examples>
    <see_also>
        <see_also_item>
            <link linkend="${graphics}surf">surf</link>
        </see_also_item>
        <see_also_item>
            <link linkend="${graphics}colormap">colormap</link>
        </see_also_item>
    </see_also>
    <history>
        <history_item>
            <history_version>1.0.0</history_version>
            <history_description>version initiale</history_description>
        </history_item>
        <history_item>
            <history_version>1.7.0</history_version>
            <history_description
      >Ajout des callbacks CreateFcn, DeleteFcn.</history_description>
        </history_item>
        <history_item>
            <history_version>--</history_version>
            <history_description
      >Ajout de la propriété BeingDeleted.</history_description>
        </history_item>
    </history>
    <authors>
        <author_item>Allan CORNET</author_item>
    </authors>
</xmldoc>
