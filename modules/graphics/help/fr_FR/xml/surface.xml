<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>surface</keyword>
    <short_description>Tracé de surface primitif.</short_description>
    <syntax>
        <syntax_item>surface(X, Y, Z)</syntax_item>
        <syntax_item>surface(X, Y, Z, C)</syntax_item>
        <syntax_item>surface(Z)</syntax_item>
        <syntax_item>surface(Z, C)</syntax_item>
        <syntax_item>surface(parent, ...)</syntax_item>
        <syntax_item>surface(..., propertyName, propertyValue)</syntax_item>
        <syntax_item>go = surface(...)</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
            <param_name>X</param_name>
            <param_description
      >Coordonnées x : vecteur ou matrice.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>Y</param_name>
            <param_description
      >Coordonnées y : vecteur ou matrice.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>Z</param_name>
            <param_description
      >Coordonnées z : vecteur ou matrice.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>C</param_name>
            <param_description
      >Tableau de couleurs : tableau m-par-n-par-3 de triplets RGB.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>parent</param_name>
            <param_description
      >Un objet graphique scalaire : conteneur parent, spécifié comme axes.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>propertyName</param_name>
            <param_description
      >Une chaîne scalaire ou un vecteur ligne de caractères.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>propertyValue</param_name>
            <param_description>Une valeur.</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
            <param_name>go</param_name>
            <param_description
      >Un objet graphique : type surface.</param_description>
        </param_output_item>
    </param_output>
    <description>
        <p>
            <b>surf</b> et <b
      >surface</b> sont deux fonctions utilisées pour créer des tracés de surface 3D, mais il existe quelques différences entre elles.</p>
            <p>
                La fonction <b
      >surf</b> est utilisée pour tracer une surface définie par une fonction de deux variables ou par un ensemble de points de données dispersés.</p>
                <p
    >Elle nécessite trois arguments d'entrée : X, Y et Z. X et Y définissent les coordonnées des points de données, et Z définit la hauteur de la surface à chaque point.</p>
                <p>
                    La fonction <b
      >surf</b> offre également des options supplémentaires pour personnaliser l'apparence du tracé, telles que l'éclairage et la couleur.</p>
                    <p />
                    <p>
                        La fonction <b
      >surface</b> est utilisée pour tracer une surface définie par une matrice de données. Elle nécessite trois arguments d'entrée : X, Y et Z. X et Y définissent les coordonnées des points de données, et Z est une matrice qui définit la hauteur de la surface à chaque point.</p>
                        <p
    >La taille de Z doit correspondre à la taille de X et Y. La fonction surface offre également des options supplémentaires pour personnaliser l'apparence du tracé, telles que l'éclairage et la couleur.</p>
                        <p>En résumé, les fonctions <b>surf</b> et <b
      >surface</b> sont utilisées pour des tracés de surface 3D, mais <b
      >surf</b> est utilisée pour une surface définie par une fonction de deux variables ou par un ensemble de points de données dispersés, tandis que <b
      >surface</b> est utilisée pour une surface définie par une matrice de données, et la taille de Z doit correspondre à celle de X et Y.</p>
                    </description>
                    <used_function />
                    <bibliography />
                    <examples>
                        <example_item>
                            <example_item_type>nelson</example_item_type>
                            <example_item_description />
                            <example_item_data
        runnable="adv-cli"
      ><![CDATA[f = figure();
data = peaks(50);
ax1 = subplot(1, 2, 1);
s1 = surface(ax1, data);
ax2 = subplot(1, 2, 2);
s2 = surf(ax2, data);
]]></example_item_data>
                            <example_item_img
        src="../../images/surface_1.svg"
        align="middle"
        generate="true"
      />
                        </example_item>
                    </examples>
                    <see_also>
                        <see_also_item>
                            <link linkend="${graphics}surf">surf</link>
                        </see_also_item>
                        <see_also_item>
                            <link linkend="${graphics}view">view</link>
                        </see_also_item>
                        <see_also_item>
                            <link
        linkend="${elementary_functions}meshgrid"
      >meshgrid</link>
                        </see_also_item>
                    </see_also>
                    <history>
                        <history_item>
                            <history_version>1.0.0</history_version>
                            <history_description
      >Version initiale</history_description>
                        </history_item>
                    </history>
                    <authors>
                        <author_item>Allan CORNET</author_item>
                    </authors>
                </xmldoc>
