<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>en_US</language>
    <keyword>xmltransform</keyword>
    <short_description>XML transformation using XSLT</short_description>
    <syntax>
        <syntax_item
    >xmltransform(xml_file, xslt_file, output_file, overwrite)</syntax_item>
        <syntax_item
    >r = xmltransform(xml_file, xslt_file, output_file, overwrite)</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
            <param_name>xml_file</param_name>
            <param_description
      >a string: path to the input XML file.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>xslt_file</param_name>
            <param_description
      >a string: path to the XSLT file.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>output_file</param_name>
            <param_description
      >a string: path to the output file.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>overwrite</param_name>
            <param_description
      >a logical: true to overwrite the output file if it exists (default), false otherwise.</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
            <param_name>r</param_name>
            <param_description
      >a logical: true if the transformation was successful, false otherwise.</param_description>
        </param_output_item>
    </param_output>
    <description>
        <p
    >This function applies an XSLT transformation to an XML file and saves the result to an output file.</p>
        <p
    >If the output file already exists and 'overwrite' is set to false, the function will not perform the transformation and will return false.</p>
    </description>
    <used_function />
    <bibliography />
<examples>
  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description />
    <example_item_data
        runnable="cli"
      ><![CDATA[xml_filename = [modulepath('xml'), '/tests/test_xml.xml'];
if isfile(xml_filename)
  xsl_filename = [modulepath('xml'), '/tests/test_xml_to_text.xslt'];
  output_filename = [tempdir(), 'test_xml_output.html'];
  fileread(xml_filename)
  R = xmltransform(xml_filename, xsl_filename, output_filename)
  fileread(output_filename)
end]]>
    </example_item_data>
  </example_item>
</examples>    
    <see_also>
        <see_also_item>
            <link linkend="${xml}xmlchecker">xmlchecker</link>
        </see_also_item>
        <see_also_item>
            <link linkend="${help_tools}xmldoctohtml">xmldoctohtml</link>
        </see_also_item>
    </see_also>
    <history>
        <history_item>
            <history_version>1.15.0</history_version>
            <history_description>initial version</history_description>
        </history_item>
    </history>
    <authors>
        <author_item>Allan CORNET</author_item>
    </authors>
</xmldoc>
