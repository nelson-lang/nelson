<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>Opérateurs Python</keyword>
    <short_description
  >La représentation des opérateurs Python dans Nelson.</short_description>
    <description>
        <p
    >Nelson facilite l'utilisation des opérateurs surchargés suivants :</p>
        <table>
            <tr>
                <th>Symbole opérateur Python</th>
                <th>Méthodes Python</th>
                <th>Méthodes Nelson</th>
            </tr>
            <tr>
                <td>- (opérateur unaire)</td>
                <td>__neg__</td>
                <td>uminus, -a</td>
            </tr>
            <tr>
                <td>+ (opérateur unaire)</td>
                <td>__pos__</td>
                <td>uplus, +a</td>
            </tr>
            <tr>
                <td>+ (opérateur binaire)</td>
                <td>__add__, __radd__</td>
                <td>plus, +</td>
            </tr>
            <tr>
                <td>- (opérateur binaire)</td>
                <td>__sub__, __rsub__</td>
                <td>minus, -</td>
            </tr>
            <tr>
                <td>* (opérateur binaire)</td>
                <td>__mul__, __rmul__</td>
                <td>mtimes, *</td>
            </tr>
            <tr>
                <td>/ (opérateur binaire)</td>
                <td>__truediv__, __rtruediv__</td>
                <td>mrdivide, /</td>
            </tr>
            <tr>
                <td>== (opérateur binaire)</td>
                <td>__eq__</td>
                <td>eq, ==</td>
            </tr>
            <tr>
                <td>&gt; (opérateur binaire)</td>
                <td>__gt__</td>
                <td>gt, &gt;</td>
            </tr>
            <tr>
                <td>&lt; (opérateur binaire)</td>
                <td>__lt__</td>
                <td>lt, &lt;</td>
            </tr>
            <tr>
                <td>!= (opérateur binaire)</td>
                <td>__ne__</td>
                <td>ne, ~=</td>
            </tr>
            <tr>
                <td>&gt;= (opérateur binaire)</td>
                <td>__ge__</td>
                <td>ge, &gt;=</td>
            </tr>
            <tr>
                <td>&lt;= (opérateur binaire)</td>
                <td>__le__</td>
                <td>le, &lt;=</td>
            </tr>
        </table>
        <p />
        <p>
            <b
      >isequal</b> builtin est également surchargée pour gérer les types Python.</p>
            <p>Pour les types numpy, <b>isequal</b> appelle <b
      >numpy.array_equal</b> depuis Python.</p>
            <p>D'autres opérateurs Python ne sont pas encore pris en charge.</p>
        </description>
        <used_function />
        <bibliography />
        <examples>
            <example_item>
                <example_item_type>nelson</example_item_type>
                <example_item_description />
                <example_item_data
      ><![CDATA[pyrun('import numpy as np')    
R = pyrun('R = np.asarray(A)', "R", 'A', magic(3))
R_A = R + R
R_B = R * 2
isequal(R_A, R_B)]]></example_item_data>
            </example_item>
        </examples>
        <see_also>
            <see_also_item>
                <link linkend="${python_engine}pyrun">pyrun</link>
            </see_also_item>
        </see_also>
        <history>
            <history_item>
                <history_version>1.5.0</history_version>
                <history_description>version initiale</history_description>
            </history_item>
        </history>
        <authors>
            <author_item>Allan CORNET</author_item>
        </authors>
    </xmldoc>
