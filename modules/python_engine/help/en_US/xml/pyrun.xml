<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
  <copyright>SAME AS NELSON SOFTWARE</copyright>

  <language>en_US</language>
  <keyword>pyrun</keyword>
  <short_description>Run Python statements from Nelson.</short_description>

  <syntax>
    <syntax_item>pyrun(code)</syntax_item>
    <syntax_item>outvars = pyrun(code, outputs)</syntax_item>
    <syntax_item>outvars = pyrun(code, outputs, pyName, pyValue)</syntax_item>
  </syntax>
  
  <param_input>
    <param_input_item>
      <param_name>code</param_name>
      <param_description
      >a string scalar, string array, character vector or character array.</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>pyName, pyValue</param_name>
      <param_description>Input arguments name and value</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>outputs</param_name>
      <param_description
      >string array: Python variable names.</param_description>
    </param_input_item>

  </param_input>

  <param_output>
    <param_output_item>
      <param_name>outvars</param_name>
      <param_description
      >One or more Nelson workspace variable names returned as valid Python types.</param_description>
    </param_output_item>
  </param_output>

  <description>
    <p><b
      >pyrun(code)</b> function executes Python statements present in the code string within the Python interpreter.</p>
    <p>Variables generated by the <b
      >pyrun</b> function remain persistent, allowing their usage in subsequent <b
      >pyrun</b> calls.</p>
    <p><b
      >outvars = pyrun(code, outputs)</b> Python variables specified in outputs are returned to Nelson.</p>
    <p>The values of these variables are captured in <b>outvars</b>.</p>
    <p><b>outvars = pyrun(code, outputs, pyName, pyValue)</b>, the <b
      >code</b> is executed with assigned input and output variable names using Nelson data passed through one or more name-value arguments.</p>
  </description>
  <used_function />
  <bibliography />

<examples>

  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description />
    <example_item_data
      ><![CDATA[pyrun('a = b * c', 'b', 5, 'c', 10)
r = pyrun('d = a + c', 'd')]]>
    </example_item_data>
  </example_item>

  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description />
    <example_item_data><![CDATA[pyrun(["a = 3","print(a)"])]]>
    </example_item_data>
  </example_item>
 
  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description />
    <example_item_data
      ><![CDATA[[R1, R2] = pyrun("a=b*c",["a","b"], 'b', 5, 'c', 10)]]>
    </example_item_data>
  </example_item>

</examples>

  <see_also>
    <see_also_item>
      <link linkend="${python_engine}pyenv">pyenv</link>
    </see_also_item>
  </see_also>

  <history>
    <history_item>
      <history_version>1.3.0</history_version>
      <history_description>initial version</history_description>
    </history_item>
  </history>

  <authors>
    <author_item>Allan CORNET</author_item>
  </authors>
</xmldoc>
