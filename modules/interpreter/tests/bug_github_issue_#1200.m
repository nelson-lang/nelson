%=============================================================================
% Copyright (c) 2017 Allan CORNET (Nelson)
%=============================================================================
% This file is part of Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
% <-- Issue URL -->
% https://github.com/nelson-lang/nelson/issues/1124
% <-- Short Description -->
% Matrix Parsing/Evaluation trouble
%=============================================================================
R = parsestring('[a a a; b b b; c c c]');
assert_isequal(R, 'script')
%=============================================================================
R = parsestring('[a a; a a]');
assert_isequal(R, 'script')
%=============================================================================
R = parsestring('[1 1; a 1]');
assert_isequal(R, 'script')
%=============================================================================
R = parsestring('[a, a, a]');
assert_isequal(R, 'script')
%=============================================================================
R = parsestring('[a a  ;a  -a] ');
assert_isequal(R, 'script')
%=============================================================================
R = parsestring('[a a  ; -a  a] ');
assert_isequal(R, 'script')
%=============================================================================
R = parsestring('[a a; a (a)]');
assert_isequal(R, 'script')
%=============================================================================
a=1;b=2;c=3;
R = [a a a; b b b; c c c];
R1 = [a, a, a; b, b, b; c, c, c];
assert_isequal(R, R1);
REF = [1     1     1;
2     2     2;
3     3     3];
assert_isequal(R, REF);
%=============================================================================
R=[-0.095-0.021j,-1];
R1 = [-0.095-0.021j,-1];
assert_isequal(R, R1);
REF = [complex(-0.095,-0.021),-1];
assert_isequal(R, REF);
%=============================================================================
