%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
format('shortEng')
%=============================================================================
R = evalc('A = 1');
REF = '
A =

     1.0000e+000

';
assert_isequal(R, REF);
%=============================================================================
R = evalc('A = -1');
REF = '
A =

    -1.0000e+000

';
assert_isequal(R, REF);
%=============================================================================
R = evalc('A = 99');
REF = '
A =

    99.0000e+000

';
assert_isequal(R, REF);
%=============================================================================
R = evalc('A = -99');
REF = '
A =

   -99.0000e+000

';
assert_isequal(R, REF);
%=============================================================================
R = evalc('A = 990');
REF = '
A =

   990.0000e+000

';
assert_isequal(R, REF);
%=============================================================================
R = evalc('A = -990');
REF = '
A =

  -990.0000e+000

';
assert_isequal(R, REF);
%=============================================================================
R = evalc('A = NaN');
REF = '
A =

             NaN

';
assert_isequal(R, REF);
%=============================================================================
R = evalc('A = Inf');
REF = '
A =

             Inf

';
assert_isequal(R, REF);
%=============================================================================
R = evalc('A = -Inf');
REF = '
A =

            -Inf

';
assert_isequal(R, REF);
%=============================================================================
