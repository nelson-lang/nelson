<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
  <copyright>SAME AS NELSON SOFTWARE</copyright>

  <language>en_US</language>
  <keyword>mustBeA</keyword>
  <short_description
  >Checks that input value comes from one of specified classes.</short_description>

  <syntax>
    <syntax_item>mustBeA(var, classNames)</syntax_item>
    <syntax_item>mustBeA(var, classNames, argPosition)</syntax_item>
    <syntax_item
    >C++: void mustBeA(const ArrayOfVector&amp; args, const wstringVector &amp;classNames, int argPosition)</syntax_item>
  </syntax>

  <param_input>
    <param_input_item>
      <param_name>var</param_name>
      <param_description>a variable.</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>classNames</param_name>
      <param_description
      >a variable: name of data type or class.</param_description>
    </param_input_item>

     <param_input_item>
      <param_name>argPosition</param_name>
      <param_description
      >a positive integer value: Position of input argument.</param_description>
    </param_input_item>
  </param_input>


  <description>
  <p><b
      >mustBeA</b> checks that input value comes from one of specified classes.</p>
</description>

  <used_function />
  <bibliography />

<examples>
  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description />
    <example_item_data
      ><![CDATA[mustBeA(1, 'double')
mustBeA([], ["double", "single"])]]>
    </example_item_data>
  </example_item>
</examples>

  <see_also>
    <see_also_item>
      <link linkend="${validators}mustBeNumeric">mustBeNumeric</link>
    </see_also_item>
  </see_also>

  <history>
    <history_item>
      <history_version>1.0.0</history_version>
      <history_description>initial version</history_description>
    </history_item>
  </history>

  <authors>
    <author_item>Allan CORNET</author_item>
  </authors>
</xmldoc>
