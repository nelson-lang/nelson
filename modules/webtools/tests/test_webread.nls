//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// This file is part of the Nelson.
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// Alternatively, you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program. If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
assert_isequal(nargin('webread'), -1);
assert_isequal(nargout('webread'), -1);
//=============================================================================
o = weboptions('RequestMethod', 'get');
R = webread('http://httpbin.org/get', o);
assert_istrue(isstruct(R));
assert_isequal(R.url, 'https://httpbin.org/get');
//=============================================================================
o = weboptions('ContentType', 'text');
R = webread('http://httpbin.org/get', o);
assert_istrue(ischar(R));
//=============================================================================
o = weboptions('ContentType', 'audio');
[y, fs] = webread('https://ccrma.stanford.edu/~jos/wav/Latin.wav', o);
assert_isequal(size(y), [527617           2]);
assert_isequal(y(1), 0);
assert_isequal(fs, 44100);
//=============================================================================
o = weboptions('ContentType', 'binary');
R = webread('https://ccrma.stanford.edu/~jos/wav/Latin.wav', o);
assert_isequal(size(R), [2110562           1]);
REF = uint8([   82;   73;   70;   70;   90;   52;   32;    0;   87;   65]);
assert_isequal(R(1:10), REF(1:10));
//=============================================================================
o = weboptions('ContentType', 'raw');
R = webread('https://ccrma.stanford.edu/~jos/wav/Latin.wav', o);
assert_isequal(size(R), [2110562           1]);
REF = uint8([   82;   73;   70;   70;   90;   52;   32;    0;   87;   65]);
assert_isequal(R(1:10), REF(1:10));
//=============================================================================
