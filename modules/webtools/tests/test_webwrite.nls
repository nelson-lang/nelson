//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// This file is part of the Nelson.
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// Alternatively, you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program. If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
assert_isequal(nargin('webwrite'), -1);
assert_isequal(nargout('webwrite'), -1);
//=============================================================================
[Y, M, D, H, MN, S] = datevec(now);
datetime = sprintf('%d/%d/%d %d:%d:%d', Y, M, D, H, MN, S);
url = 'https://hooks.slack.com/services/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';
data = struct('text', ['hello from Nelson ', datetime], 'channel', '#test_webwrite');
R = webwrite(url, data);
assert_isequal(R, 'ok');
//=============================================================================
[Y, M, D, H, MN, S] = datevec(now);
datetime = sprintf('%d/%d/%d %d:%d:%d', Y, M, D, H, MN, S);
url = 'https://hooks.slack.com/services/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';
data = struct('text', ['hello from Nelson ', datetime], 'channel', '#test_webwrite');
R = webwrite(url, jsonencode(data));
assert_isequal(R, 'ok');
//=============================================================================
api = 'https://zzxuhwtog6.execute-api.us-east-1.amazonaws.com/mwparticle';
url = [api, '/photon1'];
input = struct('data','on');
userInfo = webwrite(url, input);
assert_istrue(contains(userInfo.errorMessage, 'Task timed out after'));
//=============================================================================