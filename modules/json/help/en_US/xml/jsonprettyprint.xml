<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
  <copyright>SAME AS NELSON SOFTWARE</copyright>

  <language>en_US</language>
  <keyword>jsonprettyprint</keyword>
  <short_description>format an JSON string.</short_description>

  <syntax>
    <syntax_item>res = jsonprettyprint(txt)</syntax_item>
  </syntax>
  
  <param_input>
    <param_input_item>
      <param_name>txt</param_name>
      <param_description>a valid JSON text.</param_description>
    </param_input_item>

  </param_input>

  <param_output>
    <param_output_item>
      <param_name>res</param_name>
      <param_description
      >a string: a formatted JSON text (human readable).</param_description>
    </param_output_item>
  </param_output>

  <description>
  <p><b>jsonprettyprint</b> formats a JSON text string to be human readable.</p>
  </description>
  <used_function />
  <bibliography />

<examples>

  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description />
    <example_item_data
      ><![CDATA[field1 = 'f1';  value1 = zeros(1,10);
field2 = 'f2';  value2 = {'a', 'b'};
field3 = 'f3';  value3 = {pi, pi*pi};
field4 = 'f4';  value4 = {'fourth'};
s = struct(field1,value1,field2,value2,field3,value3,field4,value4);
r = jsonencode(s)
jsonprettyprint(r)
]]>
    </example_item_data>
  </example_item>

</examples>

  <see_also>
    <see_also_item>
      <link linkend="${json}jsondecode">jsondecode</link>
    </see_also_item>
    <see_also_item>
      <link linkend="${json}jsonencode">jsonencode</link>
    </see_also_item>
    <see_also_item>
      <link linkend="${stream_manager}filewrite">filewrite</link>
    </see_also_item>

  </see_also>

  <history>
    <history_item>
      <history_version>1.0.0</history_version>
      <history_description>initial version</history_description>
    </history_item>
  </history>

  <authors>
    <author_item>Allan CORNET</author_item>
  </authors>
</xmldoc>
