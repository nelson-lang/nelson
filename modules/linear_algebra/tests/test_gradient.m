%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
y = sin(-1:0.25:0.5);
R = gradient(y,0.25);
REF = [ 0.6393    0.7241    0.8685    0.9589    0.9896    0.9589    0.9281];
assert_isapprox(R, REF, 1e-4)
%=============================================================================
y = [1, 2, 4, 2];
R = gradient(y);
REF = [1, 3/2, 0, -2];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
y = [1, 2, 4, 2];
R = gradient (y, 0.25);
REF = [4, 6, 0, -8];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
y = [1, 2, 4, 2];
R = gradient (y, [0.25, 0.5, 1, 3]);
REF = [4, 4, 0, -1];
assert_isapprox(R, REF, 1e-4);
%=============================================================================
[X, Y] = meshgrid(-2:0.2:2);
Z = X .* exp(-X.^2 - Y.^2);
[U, V] = gradient(Z, 0.2, 0.2);
assert_isequal(size(U), [21 21]);
assert_isequal(size(V), [21 21]);

U_REF = [-0.0031   -0.0040   -0.0058   -0.0074;
-0.0066   -0.0085   -0.0124   -0.0157;
-0.0131   -0.0168   -0.0245   -0.0310;
-0.0238   -0.0307   -0.0446   -0.0566];
assert_isapprox(U(1:4, 1:4), U_REF, 1e-2);

V_REF = [-0.0038   -0.0073   -0.0129   -0.0206;
-0.0054   -0.0104   -0.0182   -0.0291;
-0.0093   -0.0179   -0.0314   -0.0501;
-0.0146   -0.0281   -0.0494   -0.0787];
assert_isapprox(V(1:4, 1:4), V_REF, 1e-2);
%=============================================================================
 
