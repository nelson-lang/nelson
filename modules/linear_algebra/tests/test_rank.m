%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
A = [3 2 4; -1 1 2; 9 5 10];
R = rank(A);
REF = 2;
assert_isequal(R, REF);
%=============================================================================
R = rank ([]);
REF = 0;
assert_isequal(R, REF);
%=============================================================================
A = [1 2 3 4 5 6 7;
4 5 6 7 8 9 12;
1 2 3 4 5 6 7;
4 5 6 7 8 9 12;
3 4 5 6 7 8 9;
4 5 6 7 8 9 10;
5 6 7 8 9 10 11];
R = rank(A);
REF = 3;
assert_isequal(R, REF);
%=============================================================================
A = eye (100);
R = rank(A);
REF = 100;
assert_isequal(R, REF);
%=============================================================================
R = rank([1:9]);
REF = 1;
assert_isequal(R, REF);
%=============================================================================
A = eye (100);
R = rank (A, 0.0009);
REF = 100;
assert_isequal(R, REF);
%=============================================================================
A = eye (100);
R = rank (A, 0.0006);
REF = 100;
assert_isequal(R, REF);
%=============================================================================
A = eye (100);
R = rank (A, 0.00000002);
REF = 100;
assert_isequal(R, REF);
%=============================================================================
