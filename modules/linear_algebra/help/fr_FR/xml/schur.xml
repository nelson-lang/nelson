<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>schur</keyword>
    <short_description>Décomposition de Schur.</short_description>
    <syntax>
        <syntax_item>T = schur(M)</syntax_item>
        <syntax_item>T = schur(M, 'real')</syntax_item>
        <syntax_item>T = schur(M, 'complex')</syntax_item>
        <syntax_item>[U, T] = schur(M)</syntax_item>
        <syntax_item>[U, T] = schur(M, 'complex')</syntax_item>
        <syntax_item>[U, T] = schur(M, 'real')</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
            <param_name>M</param_name>
        <param_description
      >une valeur numérique : scalaire ou matrice carrée (double ou simple précision)</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
            <param_name>U</param_name>
            <param_description>unitary matrix</param_description>
        </param_output_item>
        <param_output_item>
            <param_name>T</param_name>
            <param_description>upper triangular matrix</param_description>
        </param_output_item>
    </param_output>
    <description>
    <p>
        <b>schur(M)</b> calcule la décomposition de Schur.</p>
        <p
    >Avec le drapeau 'complex', la forme de Schur complexe est triangulaire supérieure avec les valeurs propres de M sur la diagonale.</p>
        <p>Si A est réelle, la forme de Schur réelle est retournée.</p>
        <p
    >Avec le drapeau 'real', la forme de Schur réelle place les valeurs propres réelles sur la diagonale et les valeurs propres complexes en blocs 2x2 sur la diagonale.</p>
        </description>
        <used_function />
        <bibliography />
        <examples>
            <example_item>
                <example_item_type>nelson</example_item_type>
                <example_item_description />
                <example_item_data
        runnable="cli"
      ><![CDATA[X = [1 2; 3 4];
[U, T] = schur(X)
[U, T] = schur(X * i, 'complex')
[U, T] = schur(X * i, 'real')]]></example_item_data>
            </example_item>
        </examples>
        <see_also>
            <see_also_item>
                <link linkend="${linear_algebra}eig">eig</link>
            </see_also_item>
        </see_also>
        <history>
            <history_item>
                <history_version>1.0.0</history_version>
                <history_description>version initiale</history_description>
            </history_item>
        </history>
        <authors>
            <author_item>Allan CORNET</author_item>
        </authors>
    </xmldoc>
