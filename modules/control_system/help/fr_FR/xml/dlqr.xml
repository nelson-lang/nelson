<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>dlqr</keyword>
    <short_description
  >Régulateur de retour d'état linéaire-quadratique (LQ) pour système d'espace d'état en temps discret.</short_description>
    <syntax>
        <syntax_item>[K, S, e] = dlqr(A, B, Q, R, N)</syntax_item>
        <syntax_item>[K, S, e] = dlqr(A, B, Q, R)</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
            <param_name>A</param_name>
            <param_description
      >Matrice d'état : matrice n x n.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>B</param_name>
            <param_description
      >Matrice entrée-état : matrice n x m.</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>Q</param_name>
            <param_description
      >Matrice pondérée du coût d'état</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>R</param_name>
            <param_description
      >Matrice pondérée du coût d'entrée</param_description>
        </param_input_item>
        <param_input_item>
            <param_name>N</param_name>
            <param_description
      >Matrice de terme croisé optionnelle : 0 par défaut.</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
            <param_name>K</param_name>
            <param_description>Gain optimal : vecteur ligne.</param_description>
        </param_output_item>
        <param_output_item>
            <param_name>S</param_name>
            <param_description
      >Solution de l'équation de Riccati algébrique.</param_description>
        </param_output_item>
        <param_output_item>
            <param_name>e</param_name>
            <param_description
      >Pôles du système en boucle fermée : vecteur colonne.</param_description>
        </param_output_item>
    </param_output>
    <description>
        <p>La fonction <b
      >dlqr</b> est conçue pour minimiser une fonction de coût quadratique associée à un modèle de système d'espace d'état linéaire invariant dans le temps discret.</p>
    </description>
    <examples>
        <example_item>
            <example_item_type>nelson</example_item_type>
            <example_item_description />
            <example_item_data
        runnable="cli"
      ><![CDATA[A = [0.9, 0.2; 0, 0.8];
B = [0; 2];
Q = [4, 0; 0, 4];
R = 3;
[K, S, e] = dlqr(A, B, Q, R)
]]></example_item_data>
        </example_item>
    </examples>
    <see_also>
        <see_also_item>
            <link linkend="${control_system}lqr">lqr</link>
        </see_also_item>
    </see_also>
    <history>
        <history_item>
            <history_version>1.0.0</history_version>
            <history_description>version initiale</history_description>
        </history_item>
    </history>
    <authors>
        <author_item>Allan CORNET</author_item>
    </authors>
</xmldoc>
