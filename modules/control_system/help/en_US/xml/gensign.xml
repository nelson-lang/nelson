<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
  <copyright>SAME AS NELSON SOFTWARE</copyright>
	<language>en_US</language>
	<keyword>gensig</keyword>
  <short_description
  >Create periodic signals for simulating system response.</short_description>

  <syntax>
    <syntax_item>[u, t] = gensig(type, tau)</syntax_item>
    <syntax_item>[u, t] = gensig(type, tau, Tf)</syntax_item>
    <syntax_item>[u, t] = gensig(type, tau, Tf, Ts)</syntax_item>
  </syntax>

  <param_input>
    <param_input_item>
      <param_name>type</param_name>
      <param_description
      >Type of periodic signal: 'cos', 'tan', 'sin', 'pulse', 'square'</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>tau</param_name>
      <param_description>Period: positive scalar</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>Tf</param_name>
      <param_description
      >Duration: positive scalar or 5*tau (default)</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>Ts</param_name>
      <param_description>positive scalar or tau/64 (default)</param_description>
    </param_input_item>
  </param_input>

  <param_output>
     <param_output_item>
      <param_name>u</param_name>
      <param_description>Generated signal: column vector.</param_description>
    </param_output_item>
     <param_output_item>
      <param_name>t</param_name>
      <param_description>Time vector: column vector.</param_description>
    </param_output_item>
  </param_output>

  <description>
    <p>The function <b
      >gensig(type, tau)</b> creates a periodic signal with unit amplitude, characterized by the specified type and period.</p>
    <p>The resulting signal, denoted as <b
      >u</b>, and its corresponding time vector, <b
      >t</b>, can be utilized for simulating the time response of a single-input dynamic system using <b
      >lsim</b>.</p>
    <p
    >For multi-input systems, you can generate signals by making repeated calls to <b
      >gensig</b> and then assemble the resulting <b
      >u</b> vectors into a matrix. When simulating a dynamic system model with <b
      >u</b> and <b>t</b>, note that the software interprets the time vector <b
      >t</b> with units based on the TimeUnit property of the model.</p>
    <p>To generate a signal with a specific duration <b>Tf</b>, use <b
      >[u, t] = gensig(type, tau, Tf)</b>.</p>
    <p>The time vector <b>t</b> spans from 0 to <b>Tf</b> in increments of <b
      >tau/64</b>.</p>
    <p>For a signal with a defined sample time <b>Ts</b>, employ <b
      >[u, t] = gensig(type, tau, Tf, Ts)</b>.</p>
    <p>In this case, the time vector <b>t</b> ranges from 0 to <b
      >Tf</b> in increments of <b>Ts</b>.</p>
    <p
    >This syntax is particularly useful for generating signals tailored for discrete-time model simulations, where <b
      >Ts</b> corresponds to the sample time of the model.</p>
  </description>

<examples>
  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description />
    <example_item_data
      ><![CDATA[f = figure();
tau = 3;
Tf = 6;
Ts = 0.1;

subplot(3, 2, 1)
[u,t] = gensig("sine",tau,Tf,Ts);
plot(t, u)
title('sine')

subplot(3, 2, 2)
[u,t] = gensig("square",tau,Tf,Ts);
plot(t, u)
title('square')

subplot(3, 2, 3)
[u,t] = gensig("cos",tau,Tf,Ts);
plot(t, u)
title('cosine')

subplot(3, 2, 4)
[u,t] = gensig("sin",tau,Tf,Ts);
plot(t, u)
title('sine')

subplot(3, 2, 5)
[u,t] = gensig("tan",tau,Tf,Ts);
plot(t, u)
title('tan')
]]>
    </example_item_data>
    <example_item_img src="../images/gensig.svg" align="middle" />

  </example_item>
</examples>

  <see_also>
    <see_also_item>
      <link linkend="${control_system}lsim">lsim</link>
    </see_also_item>
  </see_also>

  <history>
    <history_item>
      <history_version>1.0.0</history_version>
      <history_description>initial version</history_description>
    </history_item>
  </history>

  <authors>
    <author_item>Allan CORNET</author_item>
  </authors>
</xmldoc>
