<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
  <copyright>SAME AS NELSON SOFTWARE</copyright>
	<language>en_US</language>
	<keyword>lqr</keyword>
  <short_description
  >Linear-Quadratic Regulator (LQR) design.</short_description>

  <syntax>
    <syntax_item>[K, S, P] = lqr(sys, Q, R, N)</syntax_item>
    <syntax_item>[K, S, P] = lqr(A, B, Q, R, N)</syntax_item>
  </syntax>

  <param_input>
    <param_input_item>
      <param_name>sys</param_name>
      <param_description>LTI model</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>Q</param_name>
      <param_description>State-cost weighted matrix</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>R</param_name>
      <param_description>Input-cost weighted matrix</param_description>
    </param_input_item>

    <param_input_item>
      <param_name>N</param_name>
      <param_description
      >Optional cross term matrix: 0 by default.</param_description>
    </param_input_item>
    <param_input_item>
      <param_name>A</param_name>
      <param_description>State matrix: n x n matrix.</param_description>
    </param_input_item>
    <param_input_item>
      <param_name>B</param_name>
      <param_description
      >Input-to-state matrix: n x m matrix.</param_description>
    </param_input_item>

  </param_input>

  <param_output>
     <param_output_item>
      <param_name>K</param_name>
      <param_description>Optimal gain: row vector.</param_description>
    </param_output_item>
    <param_output_item>
      <param_name>S</param_name>
      <param_description
      >Solution of the Algebraic Riccati Equation.</param_description>
    </param_output_item>
    <param_output_item>
      <param_name>p</param_name>
      <param_description
      >Poles of the closed-loop system: column vector.</param_description>
    </param_output_item>

  </param_output>

  <description>

  <p>In the context of continuous-time state-space matrices <b>A</b> and <b
      >B</b>, the command <b
      >[K, S, P] = lqr(A, B, Q, R, N)</b> computes the optimal gain matrix <b
      >K</b>, the solution <b
      >S</b> to the associated algebraic Riccati equation, and the closed-loop poles <b
      >P</b>.</p>
  <p>This syntax is applicable exclusively to continuous-time models.</p>
  
  <p
    >When applied to a continuous-time or discrete-time state-space model represented by <b
      >sys</b>, the command <b
      >[K, S, P] = lqr(sys, Q, R, N)</b> computes the optimal gain matrix <b
      >K</b>, the solution <b
      >S</b> to the associated algebraic Riccati equation, and the closed-loop poles <b
      >P</b>.</p>
  <p>The weight matrices <b>Q</b> and <b
      >R</b> govern the importance of states and inputs, and the cross term matrix <b
      >N</b> is zero by default when not specified.</p>
  </description>

<examples>
  <example_item>
    <example_item_type>nelson</example_item_type>
    <example_item_description />
    <example_item_data
      ><![CDATA[A = [-0.313 56.7 0; -0.0139 -0.426 0; 0 56.7 0];
B = [0.232; 0.0203; 0];
C = [0 0 1];
D = 1;
Ts = 1.2;
sys1 = ss(A, B, C, D, Ts);
sys2 = ss(A, B, C, D);

P = 2;
Q = P * C' * C;
R = 2;
[K1, S1, e1] = lqr(sys1, Q, R)
[K2, S2, e2] = lqr(sys2, Q, R)
]]>
    </example_item_data>
  </example_item>
</examples>

  <see_also>
    <see_also_item>
      <link linkend="${control_system}care">care</link>
    </see_also_item>
    <see_also_item>
      <link linkend="${control_system}dare">dare</link>
    </see_also_item>
    <see_also_item>
      <link linkend="${control_system}lqe">lqe</link>
    </see_also_item>
  </see_also>


  <history>
    <history_item>
      <history_version>1.0.0</history_version>
      <history_description>initial version</history_description>
    </history_item>
  </history>

  <authors>
    <author_item>Allan CORNET</author_item>
  </authors>
</xmldoc>
