%=============================================================================
% Copyright (c) 2023-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
a = [-3 2;1 1];
b = [0 ; 1];
c = [1 -1];
r = 3;
[x, l, g] = dare(a, b, c'*c, r);

x_REF = [240.7334 -131.0993; -131.0993   75.9341];
l_REF = [ -0.2917; 0.6515];
g_REF = [5.9446   -2.3597];

assert_isapprox(x, x_REF, 1e-4);
assert_isapprox(l, l_REF, 1e-4);
assert_isapprox(g, g_REF, 1e-4);
%=============================================================================
d = 10^(-5);
A = [d+1 1; 1 d+1];
G = eye(2, 2);
Q = d^2 * eye(2,2);
B = G;
R = G;

[x, l, g] = dare(A, B, Q, R);

x_REF = [1.5000    1.5000;  1.5000    1.5000];
l_REF = [0.5000;  0.0000];
g_REF = [0.7500    0.7500; 0.7500    0.7500];

assert_isapprox(x, x_REF, 1e-4);
assert_isapprox(l, l_REF, 1e-4);
assert_isapprox(g, g_REF, 1e-4);
%=============================================================================
A = [ 0.0  1.0; 0.0  0.0 ];
E = [ 1.0  0.0; 0.0  1.0 ];
B = [ 0.0; 1.0 ];
C = [ 1.0  0.0; 0.0  1.0; 0.0  0.0 ];
D = [ 0.0; 0.0; 1.0 ];

[x, l, g] = dare (A, B, C' * C, D' * D, [], E);

x_REF = [1.0000         0; 0    2.0000];
l_REF = [0; 0];
g_REF = [0     0];

assert_isapprox(x, x_REF, 1e-4);
assert_istrue(all(g - g_REF < eps()));
%=============================================================================
