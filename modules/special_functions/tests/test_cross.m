%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
assert_isequal(nargin('cross'), -1)
assert_isequal(nargout('cross'), 1)
%=============================================================================
A = [4 -2 1];
B = [1 -1 3];
R = cross(A, B);
REF = [ -5   -11    -2];
assert_isequal(R, REF);
%=============================================================================
A = [  13    14     5    15    15;
14    10     9     3     8;
2     2    15    15    13];
B = [  4    20     1    17    10;
11    24    22    19    17;
23    17    24    19     5];
R = cross(A, B);
REF = [  300   122  -114  -228  -181;
-291  -198  -105   -30    55;
87   136   101   234   175];
assert_isequal(R, REF);
%=============================================================================
A = [1 0 0];
B = [0 1 0];
REF = [0 0 1];
R = cross(A, B);
assert_isequal(R, REF);
%=============================================================================
A = [1 0 0; 0 1 0; 0 0 1];
B = [0 1 0; 0 0 1; 1 0 0];
R = cross (A, B, 2);
REF = [ 0     0     1;
1     0     0;
0     1     0];
assert_isequal(R, REF);
%=============================================================================
A = [1 0 0; 0 1 0; 0 0 1];
B = [0 1 0; 0 0 1; 1 0 0];
R = cross (A, B, 1);
REF = [ 0     0    -1
-1     0     0
0    -1     0];
assert_isequal(R, REF);
%=============================================================================
A = [1 2 3;4 5 6;7 8 9];
B = [9 8 7;6 5 4;3 2 1];
R = cross(A, B);
REF = [  -30   -30   -30;
60    60    60;
-30   -30   -30];
assert_isequal(R, REF);
%=============================================================================
A = [1 2 3;4 5 6;7 8 9];
B = [9 8 7;6 5 4;3 2 1];
R = cross(A, B, 2);
REF = [   -10    20   -10;
-10    20   -10;
-10    20   -10];
assert_isequal(R, REF);
%=============================================================================
