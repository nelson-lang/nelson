//=============================================================================
// Copyright (c) 2016-present Allan CORNET (Nelson)
//=============================================================================
// This file is part of the Nelson.
//=============================================================================
// LICENCE_BLOCK_BEGIN
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// Alternatively, you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program. If not, see <http://www.gnu.org/licenses/>.
// LICENCE_BLOCK_END
//=============================================================================
function r = test_makeref(filename)
  if ~isfile(filename)
    error(_('An existing filename expected.'));
  end

  options = test_parsetags(filename);
  if (options.check_ref == false)
    error(_('<--CHECK REF--> tag expected.'));
  end
  [p, f, e] = fileparts(filename);
  if strcmp(p, '') == true;
    p = pwd();
    filename = [p, '/', f, e];
  end
  dia_ref = [p, '/', f, '.ref'];
  // delete previous .ref
  rm = rmfile(dia_ref);
  r = test_makerefile(filename, options, dia_ref);
  r = (r == 1);
endfunction
//=============================================================================
function r = test_makerefile(filename, options, ref_dest)
  cmd = '';
  if (options.english_imposed)
    cmd = [' --language', ' ', 'en_US'];
  end
  cmd_to_execute = ['"diary(''', ref_dest, '''); diary(''on'');r=run(''', filename, ''', ''errcatch''); diary(''off''); exit(double(r));"'];
  cmd = [cmd, ' --quiet', ' --execute', ' ', cmd_to_execute];

  nelson_bin_path = modulepath(nelsonroot(), 'nelson', 'bin');

  if options.cli_mode
   nelson_exe_path = ['"', nelson_bin_path, '/', 'nelson-cli', '"'];
  else
    if options.gui_mode
      nelson_exe_path = ['"', nelson_bin_path, '/', 'nelson-gui', '"'];
    else
      if options.adv_cli_mode
        nelson_exe_path = ['"', nelson_bin_path, '/', 'nelson-adv-cli', '"'];
      else
        nelson_exe_path = ['"', nelson_bin_path, '/', 'nelson-cli', '"'];
      end
    end
  end
  cmd = [nelson_exe_path, ' ' , cmd];
  [r, msg] = unix(cmd);
endfunction
//=============================================================================
