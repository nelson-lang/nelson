<?xml version="1.0" encoding="UTF-8" ?>
<xmldoc>
    <copyright>SAME AS NELSON SOFTWARE</copyright>
    <language>fr_FR</language>
    <keyword>jlrunfile</keyword>
    <short_description
  >Exécute un fichier Julia depuis Nelson.</short_description>
    <syntax>
        <syntax_item>jlrunfile(filename)</syntax_item>
        <syntax_item>jlrunfile(filename input)</syntax_item>
        <syntax_item>outvars = jlrunfile(filename, outputs)</syntax_item>
        <syntax_item
    >outvars = jlrunfile(filename, outputs, jlName, jlValue, ...)</syntax_item>
    </syntax>
    <param_input>
        <param_input_item>
        <param_name>filename</param_name>
        <param_description
      >un scalaire chaîne ou vecteur de caractères : nom de fichier .jl à exécuter.</param_description>
        </param_input_item>
        <param_input_item>
        <param_name>"filename 'input'"</param_name>
        <param_description
      >un scalaire chaîne ou vecteur de caractères : nom de fichier .jl à exécuter avec des arguments d'entrée.</param_description>
        </param_input_item>
        <param_input_item>
        <param_name>jlName, jlValue</param_name>
        <param_description
      >Noms et valeurs des arguments d'entrée.</param_description>
        </param_input_item>
        <param_input_item>
        <param_name>outputs</param_name>
        <param_description
      >tableau de chaînes : noms des variables Julia.</param_description>
        </param_input_item>
    </param_input>
    <param_output>
        <param_output_item>
        <param_name>outvars</param_name>
        <param_description
      >Une ou plusieurs variables de l'espace de travail Nelson renvoyées sous forme de types Julia valides.</param_description>
        </param_output_item>
    </param_output>
    <description>
      <p>
        <b>jlrunfile(filename)</b> exécute un fichier Julia.</p>
        <p>Comme la fonction <b
      >jlrun</b>, les variables générées dans l'espace Julia via <b
      >jlrunfile</b> sont persistantes.</p>
        <p>Le code <b
      >outvars = jlrunfile(file, outputs, jlName1, jlValue2, ..., jlNameN, jlValueN)</b> exécute le fichier avec un ou plusieurs arguments nom-valeur.</p>
        </description>
        <used_function />
        <bibliography />
        <examples>
            <example_item>
                <example_item_type>Python</example_item_type>
                <example_item_description
      >jlrunfile_example_1.jl</example_item_description>
                <example_item_data
        runnable="cli"
      ><![CDATA[content = "hello Nelson"
display(content)]]></example_item_data>
            </example_item>
            <example_item>
                <example_item_type>nelson</example_item_type>
                <example_item_description
      >jlrunfile from Nelson</example_item_description>
                <example_item_data
      ><![CDATA[jlrunfile('jlrunfile_example_1.jl')]]></example_item_data>
            </example_item>
        </examples>
        <see_also>
            <see_also_item>
                <link linkend="${julia_engine}jlrun">jlrun</link>
            </see_also_item>
            <see_also_item>
                <link linkend="${julia_engine}jlenv">jlenv</link>
            </see_also_item>
            <see_also_item>
                <link
        linkend="${julia_engine}julia_types"
      >Julia types supported</link>
            </see_also_item>
        </see_also>
        <history>
            <history_item>
                <history_version>1.12.0</history_version>
                <history_description>version initiale</history_description>
            </history_item>
        </history>
        <authors>
            <author_item>Allan CORNET</author_item>
        </authors>
    </xmldoc>
