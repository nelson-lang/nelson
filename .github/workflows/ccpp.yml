name: C/C++ CI

on: [push]

jobs:

  catalina:
    name: MacOS X Catalina
    runs-on: macos-10.15
    steps:
    - name: install dependencies
      run: |
        brew --version
        brew install zlib
        brew install libtool
        brew install automake
        brew unlink libffi
        brew install libffi
        brew unlink libffi
        brew link libffi --force
        brew uninstall --ignore-dependencies icu4c
        brew install icu4c
        brew unlink icu4c
        brew link icu4c --force
        brew info open-mpi
        brew install openmpi
        brew install pkg-config
        brew install pkgconfig
        brew install gettext
        brew link gettext --force
        echo 'export PATH="/usr/local/opt/gettext/bin:$PATH"' >> ~/.zshrc
        source ~/.zshrc
        brew install boost
        brew install libxml2
        brew upgrade cmake
        brew install qt5
        brew install fftw
        brew install portaudio
        brew install libsndfile
        brew install taglib
        brew install libgit2
        brew install hdf5
        brew install libmatio
        brew install eigen
        brew install libomp
        brew install openblas
        export BUILD_ROOT=$(pwd);
        cd /Users/runner/work/nelson;
        git clone https://github.com/Nelson-numerical-software/nelson-thirdparty-macosx.git;

    - uses: actions/checkout@v1
    - name: CMake
      run: |
        export PATH=/usr/local/opt/qt5/bin:$PATH
        cmake -DWITHOUT_SLICOT=TRUE -G "Unix Makefiles" .
    - name: make
      run: make -j4
    - name: get module skeleton
      run: make get_module_skeleton
    - name: build help
      run: |
        export PATH=/usr/local/opt/qt5/bin:$PATH
        make buildhelp
    - name: minimal tests
      run: make tests_minimal
    - name: package
      run: make package
    - name: all benchs
      run: make benchs_all
    - name: all tests
      run: make tests_all
    - name: Copy artifacts
      run: mkdir artifacts && mv tests_all*.* artifacts && mv benchs_all*.* artifacts && mv Nelson-*.tar.Z artifacts
    - uses: actions/upload-artifact@v1
      with:
        name: nelson-github-action-artifacts
        path: artifacts/

  bionic:
    name: Ubuntu-20.04 Focal
    runs-on: ubuntu-latest
    steps:
    - name: install dependencies
      run: |
        sudo apt update;
        sudo apt install apt-transport-https ca-certificates gnupg software-properties-common wget ;
        sudo apt -y autoremove cmake-data;
        sudo apt -y remove --purge --auto-remove cmake;
        sudo rm -rf /usr/local/bin/cmake
        version=3.16
        build=2
        mkdir ~/temp
        cd ~/temp
        wget https://cmake.org/files/v$version/cmake-$version.$build-Linux-x86_64.sh
        sudo mkdir /opt/cmake
        sudo sh cmake-$version.$build-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
        sudo ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
        cmake --version
        sudo apt -y install ninja-build;
        sudo apt -y install xvfb;
        sudo apt -y install libopenmpi-dev;
        sudo apt -y install autotools-dev;
        sudo apt -y install libtool;
        sudo apt -y install automake;
        sudo apt -y install openmpi-bin;
        sudo apt -y install gettext;
        sudo apt -y install pkg-config;
        sudo apt -y install libffi-dev;
        sudo apt -y install libicu-dev;
        sudo apt -y install libxml2-dev;
        sudo apt -y install liblapack-dev;
        sudo apt -y install liblapacke-dev;
        sudo apt -y install fftw3;
        sudo apt -y install fftw3-dev;
        sudo apt -y install libasound-dev;
        sudo apt -y install portaudio19-dev;
        sudo apt -y install libsndfile1-dev;
        sudo apt -y install libtag1-dev;
        sudo apt -y install alsa-utils;
        sudo apt -y install libslicot-dev;
        sudo apt -y install libsqlite3-dev;
        sudo apt -y install libgl-dev;
        sudo apt -y install hdf5-tools;
        sudo apt -y install zlib1g-dev;
        sudo apt -y install libcurl4-openssl-dev;
        sudo apt -y install libgit2-dev;
        sudo add-apt-repository --yes ppa:beineri/opt-qt-5.14.2-focal;
        sudo apt update;
        sudo apt -y install qt514-meta-full;
        sudo apt-get install -y libboost-all-dev;
        git clone https://gitlab.com/libeigen/eigen.git /tmp/eigen;
        mkdir /tmp/eigen-build;
        cd /tmp/eigen;
        git checkout 3.3;
        cd -;
        cd /tmp/eigen-build;
        cmake . /tmp/eigen;
        make -j4;
        sudo make install;
        cd -;
        git clone https://github.com/HDFGroup/hdf5.git /tmp/hdf5-1_10_5;
        cd /tmp/hdf5-1_10_5;
        git checkout hdf5-1_10_5;
        ./configure --quiet --prefix=/usr/local --enable-shared --disable-deprecated-symbols --disable-hl --disable-strict-format-checks --disable-memory-alloc-sanity-check --disable-instrument --disable-parallel --disable-trace --disable-asserts --with-pic --with-default-api-version=v110 CFLAGS="-w";
        sudo make install -C src;
        git clone https://github.com/tbeu/matio /tmp/matio;
        cd /tmp/matio;
        git checkout v1.5.16;
        cd /tmp/matio;
        ./autogen.sh;
        ./configure --enable-shared --enable-mat73=yes --enable-extended-sparse=no --with-pic --with-hdf5=/usr/local;
        make;
        sudo make install;
    - uses: actions/checkout@v1
    - name: CMake
      run: source /opt/qt514/bin/qt514-env.sh && cmake -G "Ninja" .
    - name: make with Ninja
      run: ninja -j4
    - name: get module skeleton
      run: ninja get_module_skeleton
    - name: build help
      run: ninja buildhelp
    - name: minimal tests
      run: ninja tests_minimal
    - name: package
      run: ninja package
    - name: all benchs
      run: source /opt/qt514/bin/qt514-env.sh && xvfb-run -a ninja benchs_all
    - name: all tests
      run: source /opt/qt514/bin/qt514-env.sh && xvfb-run -a ninja tests_all
    - name: Copy artifacts
      run: mkdir artifacts && mv tests_all*.* artifacts && mv benchs_all*.* artifacts && mv Nelson-*.tar.Z artifacts
    - uses: actions/upload-artifact@v1
      with:
        name: nelson-github-action-artifacts
        path: artifacts/

